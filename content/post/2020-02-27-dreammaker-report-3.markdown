---
title: Dreammaker-report-3
author: ''
date: '2020-02-27'
slug: dreammaker-report-3
categories: []
tags: []
image:
  caption: ''
  focal_point: ''
---



# 1. 오늘의 To-do List (목록)

- [x]  Git-Workflow - 연습 2
- [x]  컴포넌트 구성 (목업)
- [x]  AWS 리액트 배포
- [x]  AWS EC2 설정
- [x]  AWS RDS 설정
- [x]  데이터베이스 입력작업 (question, answer, holland 테이블 일부만 완료)
- [x]  엔지니어 체크인 및 피드백 받기 (오후 3시 ~ 오후 4시 예정)

# 2. 오늘 논의 한 일

**GIt-Workflow test-2 진행 중 이슈**

- **Workflow시에 pull-request 하고 업데이트 된 브랜치 정보를 자신의 저장소로 pull 해오는게 안된다.** 
→ 각자 remote연결을 통하여 문제 해결함
- **Dev브랜치에서 Pull로 받아온 파일들이  기존 feature1 브랜치로 넘어오지 않는다.**
→ feature 2브랜치를 생성해야 파일들이 넘어온다 (계속  feature 브랜치를 만들어야하는가??)
- **P/R하기 전에는 어떻게 테스트를 할 수 있을까?**
→ 못한다.  DEV브랜치로 보내서 (잘못 보냈을 경우에는 Revoke,  코드 리뷰가 중요) 처리
→ dev 브랜치에 코드가 쌓이면 테스트 가능

- **엔지니어 체크인 전에 질문 할 것들 정리**

1) 워크 플로우 관련 질문 (연습한 내용이 맞는지, 팀원 레포에 있는 dev브런치의 역할(업데이트가 없음))

2) SR카드 작성
- 카드를 미리 분배를 하고 진행하는게 좋은지, 아니면 그날 마다 가져가는게 좋은지
- 작업순서에 대한 피드백

3) 각 역할에 대한 분배가 잘 되어있는지 확인 받고 싶음 프로세스가 잘 구성이 되어있는지도 피드백 받고 싶음

- **컴포넌트 정리**

- app.js

- index.js

- Component

> 컴포넌트에 state 데이터 처리를 하기 전에 데이터베이스에서 어떤 형식의 데이터(body 방식)응답을 주어야 하는지 모르기 때문에  우선 fakeData를 사용하여 컴포넌트 설계를 시작하자. 그러기 위해서 body형식을 임의로 정한다.

**AWS 리액트 배포** 

- AWS -S3에 리액트 배포 (완료)  →  각 팀원(의영, 성용) 로컬로 pull까지 할 것 
→ 팀장(upstream)로컬에서 리액트 생성, 빌드 후에 S3 배포 완료(양식 4번에 링크 달아두었음)

- AWS -EC2 서버 배포(완료)    →    각 팀원(의영, 성용) 로컬로 pull까지 할 것
→ 팀장(upstream)로컬에서 express-server 생성     EC2연결 완료(17:00 ~ 18: 20)

- AWS-RDS 진행중(20:00 ~ 21:00 완료)

 **워크벤치를 활용한 데이터 삽입** 

 ****

- DB 다이어그램을 통해 추가할 테이블 생성 및 외래키 연결 설계

- 워크벤치를 통해 작성한 스키마 이용 테이블 생성 
→   question,  answer, holland 각 테이블에  넣을 데이터들을 text Csv 파일로 만들어 import 함

# 3. 엔지니어 킥오프 피드백

- **킥오프의 의미**:   SR등의 계획이 실현 가능성이 있는지 의견 조율

- **프로젝트 스텝**
BareMinimun - Advanced - Nightmare 별  해야할 리스트들 조금 더 세분화 
→  어드밴스에 있는 회원가입/로그인 기능은  Bare 단계에서도 할 수 있다.
→  어드밴스에는 소셜 로그인 및 결과를 나타낼 화면에 데이터 분석(차트, 그래프)를 다루면?
→   Bare 단계라고 하기에는 당연이 할 내용들은 제외, 기능을 위주로 세분화 하는게 필요
→   Dialogflow를 사용하기에는 너무 방대하다.  단순 챗봇을 원하면 subparty 어플도 있다
→  채널io 나 카카오 플러스 친구 등을 이용해 보라

- **UI** :  뷰에 대한 상세함이 필요,  뷰에도 바가 있는지 버튼이 있는지, 이것이 무슨 버튼인 건지 
         실제로 버튼을 누르면 어떻게 작동이 되는지 등 UX 에 관한 설계도 필요성이 있다.
→  컴포넌트는 나중에라도 할 수 있지만  UI는 확실하게 보여주는 것이 좋다.
→  이미지도 GIF로 할 것인지 DOM에서 직접 건드려 줄 것인지 등
- **스키마**:  유저별로 기록을 어떻게 관리 할 것인가? 어제와 오늘의 결과가 다름을 어떻게 저장하고 다룰 것인가?
→  결과 테이블을 유저와 어떻게 join해서 다룰 것인지 이런 것들이 advanced 단계 일 것
→  파일명이나 폴더 보다는 구조가 더 중요합니다.

**SR 카드** 

- 실제 시간이나 예상 시간의 의미는 ,  경각심 보다는 시간을 정했고  그 안에 잘 했는지 못했는지만 확인하면 된다
- 당일에 카드를 가져가기 보다는 미팅시간에 일정상 가능할 거 같아요 또는 못할거 같아요, 
 그래서 이렇게 가져갈게요 하고 미리 자신의 롤에 맞는 카드를 가져가 있어야한다.
- RNR(Roll & Responsibility) - (프로젝트 수행시의 역할과 책임, 권한과 책임) - 방식을 익혀야 합니다.
- 큰 청크에서 하루안에 가능하다 싶으면 세부로 쪼개서 한 사람이 가져가서 진행합니다.
- 계속해서 카드는 만들게 될 것이다.

**스택**

- 리덕스는 시도는 해보면 좋겠지만, 굳이 필요는 없을 것 같다.
- 리덕스를 사용해 봤다 할 정도라면 프로젝트 기간 내내  클라이언트 - 리덕스 역할만 해야한다.
- 리덕스 플럭스 패턴 및 리덕스 사가
- 부트스트랩과 스타일 컴포넌트는 거리가 있다.

→ 대부분은 섞어 쓰나,  디자인을 한다면 처음 부터 적용시켜야한다. 나중에 쓰면 위험

→  W3 School css,  부트스트랩, sass 외에도 많다.

**완성도에 대하여 (기능이 우선? 완성도가 우선?)**

- 누가 봐도 이 버튼을 누르면 무슨 일이 일어날지 알 정도의 완성도는 있어야 한다.
- 그 외에는 주어진 시간내에 우선되는 사항으로 진행하는 것이 좋다.
- 2주에는 특히 디자인 완성도가 중요하다고 생각한다. 
→ 경험을 하냐 안하냐에 따라 4주 프로젝트의 결과가 달라진다.
→ 최대한 2주 프로젝트에 경험을 많이 해보는 것이 도움이 많이 된다.
- 새로운 기능을 붙이기 전에 디테일하게 하는 작업 들은 나중에 할 기회가 별로 없다.
그러므로 최대한 디테일 한 작업들을 해보는 것도 중요하다
- 중요하게 생각하는 것들은 최대한 해본다 (회사에 어필, 커리어에 어필)
- 4주 프로젝트에서는 시간이 부족하여 완성도가 떨어지는 것은 말이 안된다고 생각한다.
퀄리티는 그냥 결과물일 뿐, 그 안에서 얻는 것들이 많이 있다.
사람들과 많이 부딪혀 보는 것은 프로젝트에서 큰 경험이다.
- 어떤 마인드로 현업에 나가야 좋은가, 어떤 기술들을 사용해봐야 좀 더 성장 할 수 있을 까?
