<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Today I learned on Home</title>
    <link>/tutorial/</link>
    <description>Recent content in Today I learned on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bootstrap</title>
      <link>/tutorial/bootstrap/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/bootstrap/</guid>
      <description> BS_image: img-fluid  Description   Create responsive images by adding an .img-fluid class to the &amp;lt;img&amp;gt; tag. The image will then scale nicely to the parent element.
  Syntax  &amp;lt;img class=&amp;quot;img-fluid&amp;quot; src=&amp;quot;img_chania.jpg&amp;quot; alt=&amp;quot;Chania&amp;quot;&amp;gt;  BS_Spacing: my  Description   Assign responsive-friendly margin or padding values to an element or a subset of its sides with shorthand classes
  Syntax  &amp;lt;div class=&amp;quot;my&amp;quot;&amp;gt; Centered element &amp;lt;/div&amp;gt;  </description>
    </item>
    
    <item>
      <title>Css</title>
      <link>/tutorial/css/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/css/</guid>
      <description>Css: &amp;lt;style&amp;gt;tag  Syntax  a { color:red }   Note  a : selector(선택자) {Color:red}; : declaration (선언) {Color} : property (속성) {Color:red} : property value (속성값)
Css: BoxModel { font-size:20px; text-align:center; text-decoration:none; : 밑줄없애기 text-decoration:underline; : 언더라인 만들어라 Border-bottom:red 20px solid; Border-right: lightblue 20px solid; Border-right:none; (오른쪽에 있는 선 없애기) Margin:20px; 가장자리 Padding:20px; width:20px; : 폭 Display:none; Display:block; : 전체화면을 이용해라 (block level element) Display:inline; : 부분화면을 이용해라 (inline element) }  Css: wrapper  Most basic example  #wrapper { width: 500px; margin: 0 auto; }  &amp;lt;body&amp;gt; &amp;lt;div id=&amp;quot;wrapper&amp;quot;&amp;gt; Piece of text inside a 500px width div centered on the page &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt;   How the principle works  Create your wrapper and assign it a certain width.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>/tutorial/git/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/git/</guid>
      <description>Git : pwd  print working Directory
 Git : ls  print working List
 Git :cd  go back to beginning
 Git :cd -  previous directory (or back)
 Git :init  Create an empty Git repository or reinitialize an existing one
 Git :clone  Clone a repository into a new directory
 Git :add .  Add all file contents to the index</description>
    </item>
    
    <item>
      <title>Html</title>
      <link>/tutorial/html/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/html/</guid>
      <description>html : &amp;lt;strong&amp;gt;tag  Description   The HTML &amp;lt;strong&amp;gt; tag gives text a strong emphasis which traditionally means that the text is displayed as bold by the browser.
  Note   what&amp;rsquo;s the difference bewteen &amp;lt;strong&amp;gt; tag and &amp;lt;b&amp;gt; ?
strong tag :시각장애인들 낭독기를 사용할때 조금 더 굵 게 읽는다.
b tag :평상시대로 굵게 읽는다.
  Syntax
&amp;lt;body&amp;gt; &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Emphasized text goes here&amp;lt;/strong&amp;gt; but not here&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt;  Sample Output</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>/tutorial/javascript/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript/</guid>
      <description>1.data type 자료형이란?  어떤 종류의 데이터를 사용하는 것이지 컴퓨터에게 알려주는 것 자료형마다 사용 가능한 연산자(Operator)를 따로 가지고 있습니다! 자료형이 같아야 연산을 할 수 있습니다!
 자료형의 종류  Number :숫자 String :문자 Boolean :true and False Null : 값이 비어있다 Undefined :값이 정의되지 않았다 symbol(new in ECMAScript 6) and Object :  1. Number type (숫자)  ex)
var firstNum = 10; // 소수점을 사용하지 않은 표현 var secondNum = 10.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>/tutorial/python/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/python/</guid>
      <description>Python: Operators  Arithmetic operators Assignment operators Comparison operators Logical operators  Arithmetic Operator           + Addition x + y   - Subtraction x - y   * Multiplication x * y   / Division x / y   % Modulus x % y   ** Exponentiation x ** y   // Floor division x // y    Assignment Operators           = x = 5 x = 5   += x += 3 x = x + 3   -= x -= 3 x = x - 3   *= x *= 3 x = x * 3   /= x /= 3 x = x / 3   %= x %= 3 x = x % 3   //= x //= 3 x = x // 3   **= x **= 3 x = x ** 3   &amp;amp;= x &amp;amp;= 3 x = x &amp;amp; 3    = x   ^= x ^= 3 x = x ^ 3   &amp;gt;&amp;gt;= x &amp;gt;&amp;gt;= 3 x = x &amp;gt;&amp;gt; 3   &amp;lt;&amp;lt;= x &amp;lt;&amp;lt;= 3 x = x &amp;lt;&amp;lt; 3    Comparison Operators           == Equal x == y   !</description>
    </item>
    
    <item>
      <title>IT terminology</title>
      <link>/tutorial/it-terminology/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/it-terminology/</guid>
      <description>text</description>
    </item>
    
    <item>
      <title>1. Dictionary</title>
      <link>/tutorial/javascript_dictionary/</link>
      <pubDate>Thu, 01 Jan 1970 09:33:39 +0900</pubDate>
      
      <guid>/tutorial/javascript_dictionary/</guid>
      <description>String str.includes()
// true or false 를 반환한다. // if 문에 넣어 쓴다. let str = &#39;To be, or not to be, that is the question.&#39;; console.log(str.includes(&#39;To be&#39;)); // true console.log(str.includes(&#39;question&#39;)); // true console.log(str.includes(&#39;nonexistent&#39;)); // false console.log(str.includes(&#39;To be&#39;, 1)); // false console.log(str.includes(&#39;TO BE&#39;)); // false console.log(str.includes(&#39;&#39;))  str.match(regexp)
immutable
// 문자열안에 있는 알파벳 뽑기. let str = &amp;quot;abcdefgh23j2k4h6l3h1uiui24h4324jk3jh4k3h24&amp;quot; let alphabet = str.match(/[a-zA-Z]/g); // [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;g&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;j&amp;quot;, &amp;quot;k&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;l&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;u&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;u&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;j&amp;quot;, &amp;quot;k&amp;quot;, &amp;quot;j&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;k&amp;quot;, &amp;quot;h&amp;quot;]  str[index]</description>
    </item>
    
    <item>
      <title>Notes</title>
      <link>/tutorial/javascript_note/</link>
      <pubDate>Thu, 01 Jan 1970 09:33:39 +0900</pubDate>
      
      <guid>/tutorial/javascript_note/</guid>
      <description>Today What I Learn ? Get Current Data &amp;amp; Time in JS var today = new Date(); // Data 가져온다. var date = today.getFullYear()+&#39;-&#39;+(today.getMonth()+1)+&#39;-&#39;+today.getDate(); // 날짜 var time = today.getHours() + &amp;quot;:&amp;quot; + today.getMinutes() + &amp;quot;:&amp;quot; + today.getSeconds(); // 시간 var dateTime = date+&#39; &#39;+time; dateTime // 2019-9-5 13:2:48&amp;quot;  block 스코프와 function 스코프의 차이 // block 스코프 for (let i = 0; i &amp;lt; 5; i = i + 1) { console.</description>
    </item>
    
    <item>
      <title>2. Basic_Daliy_Coding</title>
      <link>/tutorial/javascript_q1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript_q1/</guid>
      <description>Question  longestWord   Using the JavaScript language, have the function LongestWord take the sen parameter being passed and return the largest word in the string. (문장이 주어졌을때, &amp;lsquo;LongestWord&amp;rsquo; 함수는 주어진 문장에서 가장 긴 단어를 반환합니다.)
If there are two or more words that are the same length, return the first word from the string with that length. Assume sen will not be empty. (만약 가장 긴 단어가 두개 이상이라면, 첫번째로 등장하는 가장 긴 단어를 반환하세요.</description>
    </item>
    
    <item>
      <title>Crucial_Points</title>
      <link>/tutorial/javascript_q2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript_q2/</guid>
      <description>Dom &amp;lt;!-- div 안에 element 를 추가하는 방법 3가지 --&amp;gt; &amp;lt;!-- HTML --&amp;gt; &amp;lt;div id = &amp;quot;comments&amp;quot;&amp;gt;커피메뉴판&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; let comments = document.querySelector(&amp;quot;#comments&amp;quot;); comments.innerHTML = &amp;quot;&amp;lt;span&amp;gt;아메리카노&amp;lt;span&amp;gt;&amp;quot;; &amp;lt;/script&amp;gt; // 2. // &amp;lt;!-- HTML --&amp;gt; &amp;lt;div id = &amp;quot;comments&amp;quot;&amp;gt;커피메뉴판&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; let comments = document.querySelector(&amp;quot;#comments&amp;quot;); let newElement = document.createElement(&amp;quot;span&amp;quot;); // element 생성 newElement.innerHTML = &amp;quot;아메리카노&amp;quot;; // 생성된 element 안에 미리 써준다. comments.appendChild(newElement); // 집어넣을 comments태그 안에 생성된 elemment를 집어넣는다. &amp;lt;/script&amp;gt; &amp;lt;!-- HTML --&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>JS algorithm</title>
      <link>/tutorial/javascript_algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript_algorithm/</guid>
      <description>Question  range   Complete the below function called range that takes two integers as parameters, start and end, and returns an array containing all the whole numbers between them starting with start and up to end (you can use a any loop)
After you write your function, you can test it using the above inputs to make sure that it behaves correctly.
 function range(start, end) { // YOUR CODE HERE // 만약 strat 와 end 같다면 &amp;amp;&amp;amp; 만약 strat 가 end 보다 작으면 [] 반환 // for 문을 사용해 start 를 초기값으로 지정하고 end 보다 작을때까지 숫자 반환 let arr = []; if ( start === end || start &amp;gt;= end ) { return []; } else { for ( let i = start; i &amp;lt; end; i = i + 1 ) { arr.</description>
    </item>
    
  </channel>
</rss>