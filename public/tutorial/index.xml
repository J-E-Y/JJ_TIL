<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Today I learned on </title>
    <link>/tutorial/</link>
    <description>Recent content in Today I learned on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>__Asynchronous</title>
      <link>/tutorial/2020-02-08-server-side-techniques/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2020-02-08-server-side-techniques/</guid>
      <description>Callback
 Callback Function이란, 그 함수 자체가 다른 함수의 인자(argument)로 넘겨져서 주어진 시점에 실행될 수 있도록 하는 함수입니다. 주어진 시점은 동기적일 수도 있고, 아닐 수도(비동기적) 있습니다.
  Async JS Callback   예제
 const printString = (string, callback) =&amp;gt; { // 1  setTimeout( () =&amp;gt; { console.log(string) callback() }, Math.floor(Math.random() * 100) + 1 ) } const printAll = () =&amp;gt; { // 2  printString(&amp;#34;A&amp;#34;, () =&amp;gt; { // 4  printString(&amp;#34;B&amp;#34;, () =&amp;gt; { // 5  printString(&amp;#34;C&amp;#34;, () =&amp;gt; {}) // 6  }) }) } printAll() // 3    printString 함수 표현식: 이제 printString 함수를 호출할 수 있습니다.</description>
    </item>
    
    <item>
      <title>__Authentication</title>
      <link>/tutorial/2020-02-22-authentication/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2020-02-22-authentication/</guid>
      <description>Cookie &amp;amp; Session  HTTP의 stateless하고 connectionless한 특성 때문에, 서버와 클라이언트는 연속적으로 통신을 할 수 없습니다. 때문에 같은 유저가 여러 번 요청을 보내더라도, 서버는 그 유저와의 통신이 이전에도 있었던지 알 길이 없습니다. 만약 쿠키와 세션이 없는 가운데 권한 부여(authorization)을 구현하려 한다면, 새로운 요청이 있을 때마다 매번 인증(authentication) 작업을 해 주어야 할 것입니다. 이에 대한 보완책이 바로 쿠키(cookie)와 세션(session)입니다.   세션과 쿠키는 별개의 개념이 아닙니다! 세션 또한 쿠키를 기반으로 합니다. 서버에서 세션 id가 생성이 되면, 응답 시 쿠키에 세션 id를 실어 클라이언트에 전달합니다.</description>
    </item>
    
    <item>
      <title>__node</title>
      <link>/tutorial/2020-02-08-node/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2020-02-08-node/</guid>
      <description>Node
 node.js 란?   노드는 V8 엔진으로 만들어진 자바스크립트 런타임이다.
  v8 이란 ?   v8 complies Javascript directly to native machine code
  자바스크립트를 기계어로 컴파일 해준다.
  런타임이란?   프로그래밍 언어가 구동되고 있는 환경 이다
 결론적으로 Node.js 란?
node.js 는 자바스크립트를 컴파일 해주는 엔진으로 빌드된 자바스크립트 구동중인 환경이다.
RESTful API
 REST(REpresentational State Transfer)   REST API에 REST는 Representational State Transfer의 약자로 소프트웨어 프로그램 아키텍처의 한 형식입니다.</description>
    </item>
    
    <item>
      <title>__Database</title>
      <link>/tutorial/2020-02-06-database/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2020-02-06-database/</guid>
      <description>SQL 이란?  데이터베이스는 웹 개발을 위해 다양한 정보를 효율적이고 안정적으로 보관하기 위해서 사용합니다. 가장 많이 사용하시게 될 mysql이 SQL database (관계형 데이터베이스, RDBMS)고, 이를 활용하기 위한 언어가 SQL(Structured Query Language)입니다. 즉, DB에 구조화된(Structured) 질문(Query)을 할 수 있는 컴퓨터 언어(Language) 입니다.
 SQL vs NOSQL ?  SQL Database - Strict Schema, Relations  Strict Schema - 처음 스키마 설계시 필요할 것으로 예상이 되었던 데이터보다 더 많은 데이터를 다루게 되었을 때, 유연하게 스키마를 바꿀 수 없습니다.</description>
    </item>
    
    <item>
      <title>__React</title>
      <link>/tutorial/2020-01-20-react/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2020-01-20-react/</guid>
      <description>What is &amp;ldquo;React&amp;rdquo;??  인터렉션이 늘어남에 OR 관리 해야할 Dom 이 많아질수록 관리하기가 힘들어짐 프론트 엔드 라이브러리, 프레임웍 많이 있다. 그중에 하나가 React 이다.    Component 는 데이터(ex: Props, State)를 입력받아 DOM Node를 출력하는 함수의 역할을 합니다.
  Component 는 UI를 구성하는 개별적인 뷰 단위입니다. Application은 이런 Component들이 모여 마치 블럭을 조립하듯 완성됩니다.
  각 Component 들은 Application의 다른 부분, 또는 다른 Application에서 쉽게 재사용이 가능합니다.</description>
    </item>
    
    <item>
      <title>__Web Architecture</title>
      <link>/tutorial/2020-01-13-sever/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2020-01-13-sever/</guid>
      <description>Web Architecture ![](/tutorial/2020-01-13-sever_files/Screen Shot 2020-02-22 at 9.24.05 PM.png)
브라우저란? 인터넷 망에서 정보를 감색하는데 사용하는 응용프로그램을 말한다.
 기능  웹 페이지 열기, 최근 방문한 URL(uniform resource locator) 및 즐겨찾기 제공, 웹페이지 저장
![](/tutorial/2020-01-13-sever_files/Screen Shot 2020-02-22 at 9.09.37 PM.png)
 종류  Explorer
fireFox
Chrome
Safari
Opera
Client and Server ![](/tutorial/2020-01-13-sever_files/Screen Shot 2020-02-22 at 9.09.41 PM.png)
API [Application Program Interface]
프로그램과 또 다른 프로그램을 연결해주는 일종의 다리라고 볼 수 있습니다.
서버 자원을 잘 가져다가 쓸수 있게 만들어놓은 interface 를 말한다.</description>
    </item>
    
    <item>
      <title>__Algorithm_1</title>
      <link>/tutorial/2019-11-14-javascript-daliy-coding-level-1/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2019-11-14-javascript-daliy-coding-level-1/</guid>
      <description>Question longestWord  Using the JavaScript language, have the function LongestWord take the sen parameter being passed and return the largest word in the string. (문장이 주어졌을때, &amp;lsquo;LongestWord&amp;rsquo; 함수는 주어진 문장에서 가장 긴 단어를 반환합니다.)
  If there are two or more words that are the same length, return the first word from the string with that length. Assume sen will not be empty. (만약 가장 긴 단어가 두개 이상이라면, 첫번째로 등장하는 가장 긴 단어를 반환하세요.</description>
    </item>
    
    <item>
      <title>__Algorithm_2</title>
      <link>/tutorial/2019-11-14-javascript-daliy-coding-level-2/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2019-11-14-javascript-daliy-coding-level-2/</guid>
      <description>Question gcd(최대 공약 알고리즘) 함수 작성  주어진 두 숫자에 대한 최대공약수(greatest common divisor)를 구하세요
  outPut  gcd(22, 24) // 2  My_soultion function gcd(num1, num2) { // code goes here  //num1 = 12,num 2 = 8  let num1Arr = []; let num2Arr = []; for (let i =0; i &amp;lt;= num1; i ++) { num1Arr.push(i); } for (let i =0; i &amp;lt;= num1; i ++) { num2Arr.</description>
    </item>
    
    <item>
      <title>__Algorithm_3</title>
      <link>/tutorial/javascript_algorithm/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript_algorithm/</guid>
      <description>Qeustion scrabble word calculator  implement the word_calc method to return the correct Scrabble word score. The scores are already set up for you to use and are managed within Dictionaries:
 one_point_values = [&amp;#34;a&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;i&amp;#34;, &amp;#34;o&amp;#34;, &amp;#34;u&amp;#34;, &amp;#34;l&amp;#34;, &amp;#34;n&amp;#34;, &amp;#34;r&amp;#34;, &amp;#34;s&amp;#34;, &amp;#34;t&amp;#34;]; two_point_values = [&amp;#34;d&amp;#34;, &amp;#34;g&amp;#34;]; three_point_values = [&amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;m&amp;#34;, &amp;#34;p&amp;#34;]; four_point_values = [&amp;#34;f&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;v&amp;#34;, &amp;#34;w&amp;#34;, &amp;#34;y&amp;#34;]; five_point_values = [&amp;#34;k&amp;#34;]; eight_point_values = [&amp;#34;j&amp;#34;,&amp;#34;x&amp;#34;]; ten_point_values = [&amp;#34;z&amp;#34;,&amp;#34;q&amp;#34;]; word_calc(&amp;#34;zoo&amp;#34;) // 12 word_calc(&amp;#34;bus&amp;#34;) // 5  My_soultion function word_calc(word) { var inputArr = word.</description>
    </item>
    
    <item>
      <title>__DS &amp; OOP</title>
      <link>/tutorial/2019-12-21-spint2/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2019-12-21-spint2/</guid>
      <description>OPP 란? 객체 지향 프로그래밍이란(OOP: Object Oriented Programming)?  객체들의 모임이다.  객체 지향 프로그래밍 장점  코드의 재사용성 제공 *객체의 특성이나 속성을 한 번 정의해 놓으면 해당 객체에 소속되어 있는 모든 객체들의 속성으로 사용할 수 있으므로 재사용성이 높아진다. 유지보수의 용이 : 한 번만 정의한 것을 수정하면 모든 객체의 속성을 수정할 수 있다. 신뢰성 증대 : 다양하게 사용된 속성들에 경험이 쌓이면서 신뢰가 축적되기 쉽고 그것을 다시 사용한다면 에러(버그)의 가능성이 줄어든다.  OOP의 기본 구성 요소   클래스(Class)</description>
    </item>
    
    <item>
      <title>__Iheritance</title>
      <link>/tutorial/2020-01-05-spint-3/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2020-01-05-spint-3/</guid>
      <description>프로토타입 상속의 관한개념 ![](/tutorial/2020-01-05-spint-3_files/Screen Shot 2020-01-09 at 11.05.49 PM.png)
prototype || __proto__ || constructor 관계   1.Parent생성자 함수가 생성되는순간 Parent의 프로토타입 객체 (Parent.prototype) 가 형성 된다.
  2.Parent.protoype 안에는 __proto__ 와 constructor 가 있다.
  3.__proto__ 는 위에 부모객체를 가르키고 연결되어있다.
  4.모든 객체는 __proto__가지고 있다. 프로토타입 객체에 접근할수 있게 해준다.
  4.constructor 는 자기 자신을 가르킨다. Parent === Parent.prototype.constructor // true
  5.생성자 함수 Parent의 인스턴스로 Son1,2,3,4을 생성했습니다.</description>
    </item>
    
    <item>
      <title>__Immersive Prep</title>
      <link>/tutorial/2019-12-21-sprint1/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2019-12-21-sprint1/</guid>
      <description>Runtime
  런타임란?
 프로그래밍 언어가 실행되는 곳    Node.js
  Node 란?
 자바스크립트 런타임, V8엔진 등장(속도 향상, 크롬 브라우저의 V8 기반으로 nodejs사용해서 주로 웹서버 구축할수 있는 플랫폼 이다.    V8 크롬 자바스크립트엔진?
  자바스크립트를 기계어로 컴파일 해주는 역활을 해주는것이 V8
  실행 시키는 법
 node.js 환경에서 node &amp;lt;file.name&amp;gt; 명령을 하면 작성한 코드가 작동합니다.    1.runNode.js 파일을 만든다.</description>
    </item>
    
    <item>
      <title>__My_MDN</title>
      <link>/tutorial/2019-11-14-javascript-my-mdn/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2019-11-14-javascript-my-mdn/</guid>
      <description>String  str.includes()
// true or false 를 반환한다. // if 문에 넣어 쓴다.  let str = &amp;#39;To be, or not to be, that is the question.&amp;#39;; console.log(str.includes(&amp;#39;To be&amp;#39;)); // true console.log(str.includes(&amp;#39;question&amp;#39;)); // true console.log(str.includes(&amp;#39;nonexistent&amp;#39;)); // false console.log(str.includes(&amp;#39;To be&amp;#39;, 1)); // false console.log(str.includes(&amp;#39;TO BE&amp;#39;)); // false console.log(str.includes(&amp;#39;&amp;#39;)) str.match(regexp)
immutable
// 문자열안에 있는 알파벳 뽑기.  let str = &amp;#34;abcdefgh23j2k4h6l3h1uiui24h4324jk3jh4k3h24&amp;#34; let alphabet = str.match(/[a-zA-Z]/g); // [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;f&amp;#34;, &amp;#34;g&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;j&amp;#34;, &amp;#34;k&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;l&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;u&amp;#34;, &amp;#34;i&amp;#34;, &amp;#34;u&amp;#34;, &amp;#34;i&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;j&amp;#34;, &amp;#34;k&amp;#34;, &amp;#34;j&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;k&amp;#34;, &amp;#34;h&amp;#34;]  str[index]</description>
    </item>
    
    <item>
      <title>__My_Notes</title>
      <link>/tutorial/2019-11-26-js-post/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/2019-11-26-js-post/</guid>
      <description>&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 1.Javacript &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- Useful JavaScript Array Methods 1.Array.of :
const numbers = Array.of(5); const numbers = Array.of(5, 6, 7, 8); // console.log(numbers) [5] // console.log(numbers) [5,6,7,8]  2.Array.from :
const numbers = [1, 2, 3, 4, 5]; // Following code will create an array where each element is multiplied by 2 const copy = Array.from(numbers, value =&amp;gt; value * 2); console.log(copy); // [2, 4, 6, 8, 10]  3.Array.find :</description>
    </item>
    
    <item>
      <title>Bootstrap</title>
      <link>/tutorial/bootstrap/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/bootstrap/</guid>
      <description> BS_image: img-fluid   Description   Create responsive images by adding an .img-fluid class to the &amp;lt;img&amp;gt; tag. The image will then scale nicely to the parent element.
  Syntax  &amp;lt;img class=&amp;#34;img-fluid&amp;#34; src=&amp;#34;img_chania.jpg&amp;#34; alt=&amp;#34;Chania&amp;#34;&amp;gt;  BS_Spacing: my   Description   Assign responsive-friendly margin or padding values to an element or a subset of its sides with shorthand classes
  Syntax  &amp;lt;div class=&amp;#34;my&amp;#34;&amp;gt; Centered element &amp;lt;/div&amp;gt; </description>
    </item>
    
    <item>
      <title>CodeStates</title>
      <link>/tutorial/javascript_dictionary/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript_dictionary/</guid>
      <description>![](/tutorial/Javascript_Dictionary_files/Screen Shot 2019-12-26 at 8.05.41 PM.png)</description>
    </item>
    
    <item>
      <title>Css</title>
      <link>/tutorial/css/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/css/</guid>
      <description>what I need to learn ![](/tutorial/CSS_files/Screen Shot 2019-12-17 at 5.06.14 PM.png)
&amp;lt;style&amp;gt;  /*syntax*/ &amp;lt;style&amp;gt; a { color:red } &amp;lt;/style&amp;gt; &amp;lt;dd&amp;gt;a : selector(선택자)&amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt;{Color:red}; : declaration (선언)&amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt;{Color} : property (속성)&amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt;{Color:red} : property value (속성값)&amp;lt;/dd&amp;gt; hover 버튼 클릭시 마우스 손가락 변형 button.hover { cursor: pointer; } 스크롤 만들기 &amp;lt;!--Vertical scroll bar in div which is a child of css grid column --&amp;gt; &amp;lt;div class=&amp;#34;A&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;B&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;C&amp;#34;&amp;gt;search&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;D&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;1&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;2&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;3&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;4&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;5&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;6&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;7&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;8&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;9&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;10&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;11&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;12&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;10&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;11&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;12&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;10&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;11&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;E&amp;#34;&amp;gt;12&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; // 먼제 부모 tag 에 grid 명령과 max-hight 을 준다.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>/tutorial/git/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/git/</guid>
      <description>1.Command Line (터미널) ls  파일보기  ls -A  숨겨진 파일까지 보기  ls -al  상세 내용  // (1) (2)(3) (4) (5) (6) (7) (8) //drwxr-xr-x 2 root wheel 64B 11 7 14:14 test/  //1접근 권한 (읽기/쓰기/실행 가능) 여부 //2chmod 명령어 //3링크된 파일 갯수 //4소유자 //5소유그룹 //6파일 크기 //7만든 날짜 //8만든 시간 //9파일/디렉토리 이름  cd 디렉토리 이름  디렉토리로 이동( print working List )  myuser@mymachine:~$ `cd` Downloads cd-  뒤로가기  cd /  global 로 가기 (제일 처음 root 디렉토리로 이동 )  pwd  내가 어디있는지 확인  // myuser@mymachine:~/Downloads$ pwd // showing that .</description>
    </item>
    
    <item>
      <title>Html</title>
      <link>/tutorial/html/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/html/</guid>
      <description>![](/tutorial/HTML_files/Screen Shot 2019-09-13 at 5.15.58 PM.png)
 &amp;lt;strong&amp;gt;  /* The HTML &amp;lt;strong&amp;gt; tag gives text a strong emphasis which traditionally means that the text is displayed as bold by the browser. Note what&amp;#39;s the difference bewteen strong tag and b tag ? strong tag :시각장애인들 낭독기를 사용할때 조금 더 굵 게 읽는다. b tag :평상시대로 굵게 읽는다. */ &amp;lt;h1&amp;gt;  &amp;lt;!-- The HTML &amp;lt;h1&amp;gt; tag defines the highest level or most important heading in the HTML document.</description>
    </item>
    
    <item>
      <title>Javascript_Basic</title>
      <link>/tutorial/javascript/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript/</guid>
      <description>1.data type  자료형이란?  어떤 종류의 데이터를 사용하는 것이지 컴퓨터에게 알려주는 것 자료형마다 사용 가능한 연산자(Operator)를 따로 가지고 있습니다! 자료형이 같아야 연산을 할 수 있습니다!
 자료형의 종류  Number :숫자 String :문자 Boolean :true and False Null : 값이 비어있다 Undefined :값이 정의되지 않았다 symbol(new in ECMAScript 6) and Object :  1. Number type (숫자)  ex)  var firstNum = 10; // 소수점을 사용하지 않은 표현 var secondNum = 10.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>/tutorial/python/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/python/</guid>
      <description>Python: Operators   Arithmetic operators Assignment operators Comparison operators Logical operators  Arithmetic Operator           + Addition x + y   - Subtraction x - y   * Multiplication x * y   / Division x / y   % Modulus x % y   ** Exponentiation x ** y   // Floor division x // y    Assignment Operators           = x = 5 x = 5   += x += 3 x = x + 3   -= x -= 3 x = x - 3   *= x *= 3 x = x * 3   /= x /= 3 x = x / 3   %= x %= 3 x = x % 3   //= x //= 3 x = x // 3   **= x **= 3 x = x ** 3   &amp;amp;= x &amp;amp;= 3 x = x &amp;amp; 3    = x   ^= x ^= 3 x = x ^ 3   &amp;raquo;= x &amp;raquo;= 3 x = x &amp;raquo; 3   &amp;laquo;= x &amp;laquo;= 3 x = x &amp;laquo; 3    Comparison Operators           == Equal x == y   !</description>
    </item>
    
    <item>
      <title>Technical terms</title>
      <link>/tutorial/it-terminology/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/it-terminology/</guid>
      <description>CPU&amp;amp;메모리(RAM)&amp;amp;스토리지(HDD,SSD)
   CPU : 중앙정보처리장치, 레지스터, 데이터를 연산/처리하는 가장 중요한 부분, 아주 빠름     처리속도가 가장 빠르다.
  어떠한 데이터가져와서 처리하려면
  바로 스토리지로 가지 않는다.왜냐하면 느리고 성능이 CUP 를 못따라 온다.
  그래서 메모리를 거쳐 데이터를 가져와서 처리를 해준다.
   메모리(RAM)(램) : CPU에서 직접 접근이 가능, 사용자가 자유롭게 내용을 읽고 쓰고 지울 수 있다. 휘발성 기억장치, 빠름     가격이 비싸다</description>
    </item>
    
  </channel>
</rss>