<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on JohnJung</title>
    <link>/post/</link>
    <description>Recent content in Posts on JohnJung</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debounce 와 Throttle 차이점</title>
      <link>/post/debounce-throttle/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/debounce-throttle/</guid>
      <description>Debounce input창에서 만약 onchange속성을 넣었다고 과정하자 그러면 그때 이값들이 어디에 올라가게 되고 그것을 반복하게 될것이다. 그러면 페이지에 엄청난 양의 메모리를 쓰게 된다 그렇게 된다면 페이지 로딩 속도가 느려지게 될것이다.
그렇기 때문에 Debounce 를 써서 이러한 이벤트 발생량을 줄이는 것이다. 바운스를 사용하면 키보드에서 동작이 멈출때 딱한번 실행이 된다.
Throttle 규칙적이고 정기적으로 특정한 시점만 실행하게 되므로 이벤트 를 줄일수 있다.
Debounce 와 Throttle 차이점은? 디바운싱과 스로틀의 가장 큰 차이점은 스로틀은 적어도 X 밀리 초마다 정기적으로 기능 실행을 보장한다는 것입니다.</description>
    </item>
    
    <item>
      <title>CodeMate-report-1</title>
      <link>/post/codemate-report-1/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/codemate-report-1/</guid>
      <description>기업협업 프로젝트 Dog-Mate 4명에서 팀을 이루어 프론트2명 백엔드 2명 으로 시작하였다.
프론트와 백엔드 스택은 이렇다 .
첫번째 2주 프로젝트와는 다르게 새로운 기술 스택이 추가되었다.
Front End	React,Redux,Redux toolkit,material ui Back End	TypeORM,express,typescript-rest Etc	TypeScript,eslint,mocha/chai,prettier 1차 배포 후 피드백 배포를 진행하고 기업에서 일하고 계신분에게 피드백을 얻게 되었다.
프론트에서는 전반적으로 redux 를 쓰며 이익을 얻는 면이 부족한것 이 아닐까라는 의견을 듣게 되었고 저또한 코드를 작성하며 redux 를 굳이 써야하는 이유를 아직 깨닫지 못했다.</description>
    </item>
    
    <item>
      <title>Redux </title>
      <link>/post/redux/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/redux/</guid>
      <description>Do you need Redux?? </description>
    </item>
    
    <item>
      <title>typescript</title>
      <link>/post/typescript/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/typescript/</guid>
      <description>설치 install npx create-react-app my-app --template typescript </description>
    </item>
    
    <item>
      <title>React with Babel or React with typescript</title>
      <link>/post/react-with-babel-or-react-with-typescript/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/react-with-babel-or-react-with-typescript/</guid>
      <description>React with Babel [es6,jsx] ![](/post/2020-03-11-react-with-babel-or-react-with-typescript_files/Screen Shot 2020-03-11 at 7.45.23 PM.png)
![](/post/2020-03-11-react-with-babel-or-react-with-typescript_files/Screen Shot 2020-03-11 at 8.04.29 PM.png)
바벨이란?
바벨은 컴파일러 버전이 틀린 자바스크립트 문법을 읽을수 있게 컴파일 해주는 것이다.
react를 돌리기 위해서는 필수적인 모듈이 필요하다. 리엑트를 설정할때 필수적인것 1.Module bundler webpack :
2.Loader : webpack 이 jsx 가 들어있는 파일을 컴퍼넌트를 작성한 파일을 읽고나서 설정하는 곳이 Lpader 이다. babel-loader : loader 중에 가장 필수로 들어가는게 바벨 loader이다. 바벨로드를 쓰기위해서 babel-core 받아야하고 어떤 바벨을 쓸것이냐 babel-preset-env 받아야 하고 Jsx 를 transform하기 위해서는 babel-plugin-transform-react-jsx 받아야 한다.</description>
    </item>
    
    <item>
      <title>Vanilla js / Ecma script / Typescript</title>
      <link>/post/typesript/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/typesript/</guid>
      <description>1. 바닐라 자바스크립트 (Vanilla js) 2. 에크마 스크립트 (Ecma Script) 3. 타입 스크립트 (Typescript) 자바스크립트의 슈퍼셋인 오픈소스 프로그래밍 언어로, 마이크로소프트에서 개발했다.
Javascript + type = typescript!
언어이기도 하고 라이브러리 이기도 하다
타입스크립트의 실행기는 무엇인가?
그것은 라이브러리다. 언어인데 실행기가 라이브러리라고? 맞다 .
그래서 버그가 있다.
![](/post/2020-03-10-typesript_files/Screen Shot 2020-03-10 at 9.05.02 PM.png)
TypeScript 또한 자바스크립트 대체 언어의 하나로써 자바스크립트(ES5)의 Superset(상위확장)이다
TypeScript 컴파일러(tsc)는 TypeScript 파일(.ts)을 자바스크립트 파일로 컴파일 || 트랜스파일링한다. 컴파일과 트랜스파일링은 같은 의미이다.</description>
    </item>
    
    <item>
      <title>My-first-project-Review</title>
      <link>/post/my-first-project-dreammaker/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/my-first-project-dreammaker/</guid>
      <description>프로젝트에서 가장 중요했던 것은? 초반에 조급하지 않고 충분하게 구조를 계획하고 설계하는것에 필요성과 의사소통의 중요성을 알게 되었습니다. 상대방에 말을 이해하고 듣는것의 얼마나 중요한지를 조금 더 알게 되었던것 같습니다.
프로젝트에서 커뮤니케이션 이란? 서로 어떠한 일의 결과를 만들기위한 필수과정
프로젝트에서 협업이란? 같이하는 즐거운 일
프로젝트에서 기획이란? 장점은 중심에서 벗어나 길을 잊어 버릴수 상황을 보호한다. 단점은 새로운것이 정해진후에 창의적인 생각을 못하게 될수 있다.
프로젝트에서 자신이 얻고 싶었던 것은?  협업을 하는 방법 기초확인 클라이언트→서버→DB 흐름 회고를 하며 내가 했던것들을 돌아보기  </description>
    </item>
    
    <item>
      <title>What makes a good front-end developer?</title>
      <link>/post/dreammaker-report-8/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/dreammaker-report-8/</guid>
      <description>2  I’ll argue that front-end developers need to master four different skills.
 Empathy Code Design Communication
3  Front-End Developers, having learnt HTML, CSS and JS, are forced to take functionality into account when creating user experiences or making sure that the two disciplines work as one from a development perspective. They become all-rounders, having to understand what is actually happening between the AJAX data and the PHP file that’s sending off a mail or returning errors.</description>
    </item>
    
    <item>
      <title>error-cross-site</title>
      <link>/post/2020-03-05-dreammaker-report-7/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020-03-05-dreammaker-report-7/</guid>
      <description>에러 발견 서버에서 데이터를 받아서 클라이언트에서 핸들링 할때 home page 에서 이러한 메시지의 경고창을 얻게 되었다.
 A cookie associated with a cross-site resource at http://google.com/ was set without the SameSite attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with SameSite=None and Secure. You can review cookies in developer tools under Application&amp;gt;Storage&amp;gt;Cookies and see more details at https://www.chromestatus.com/feature/5088147346030592 and https://www.chromestatus.com/feature/5633521622188032.
 how to solve  This is a companion repo for the &amp;ldquo;SameSite cookies explained&amp;rdquo; article on web.</description>
    </item>
    
    <item>
      <title>My-frist-project-DreamMaker</title>
      <link>/post/dreammaker-report-6/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/dreammaker-report-6/</guid>
      <description>ReamMe 작성 learning points EC2 에서 서버를 돌리지 않고 serverLess 사용해서 ASW 에 라마를 쓰는 이유?
 라마를 쓰면 하나의 함수만 요청 처리를 해주기 때문에 메모리 효율성을 좋아진다. 라마를 쓰기위해서 Serverless computing 이 필요하다.
 토큰을 사용하는 이유?
 토큰을 사용할때는 쿠키에 담아서 서버에서 보내주는 로직을 사용한다
 리엑트를 쓸때 리덕스랑 hooks 사용하는 이유?
 state 와 components 관리하기 편리해진다. 복잡성을 줄인다.
 리덕스로 비동기 처리 어떻게 했나요?
리프레시 토큰과 데이터 받을때받는것의 차이는?</description>
    </item>
    
    <item>
      <title>Dreammaker-report-5</title>
      <link>/post/dreammaker-report-5/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/dreammaker-report-5/</guid>
      <description>1. 오늘의 To-do List (목록)  우분투에서 EC2 인스턴스 연결 FileZilla ftp서버 연결 클라이언트에서 서버에 요청할 형식들 구성 논의 서버에서 클라이언트에 보내줄 형식들 구성 논의 시퀄라이즈에서 mysql curd 명령어 생각, JOIN 문 등 클라이언트 초기 화면 핸들링 후에 첫 P/R 보내기 비회원 전용 테이블 스키마 설계 설문 시작전 선택할 데이터들에 대한 값 보내는 방법 논의  2. 오늘 논의 한 일  EC2 연결한 민재님 컴퓨터에서 우분투가 잘 못되어 다시 설치 후에 EC2를 연결하였는데 서버와 연결이 잘 되지 않음 → 보안 설정 후 문제 해결 Filezilla를 통해 EC2에서 CLI작업 보다 편하게 하고 싶어서 연결시도 하였으나 계속 접속 실패 → 우분투 지우기 전에는 잘 되었으나, 현재 Filezilla와 연결이 되질 않음, 각 팀원들 전부 FIleZilla를 설치하고 pem키를 통해 서버 연결하는 것 성공, 민재님도 지우고 다시 새 서버 만들기를 통해 연결 성공  </description>
    </item>
    
    <item>
      <title>Dreammaker-report-4</title>
      <link>/post/dreammaker-report-4/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/dreammaker-report-4/</guid>
      <description>1. 오늘의 To-do List (목록)  어제 조사한 유형별 흥미조사 및 질문지 답변지 관한 내용 공유 DB에 어떻게 원하는 질문과 결과를 넣고 화면에 가져올지 DB 스키마 작성 해보기 클라이언트 UI 화면 목업 만들기 SR 카드 수정 및 분배 ( SR카드는 추가 될 수 있고 변경 될 수 있다. 가져갈 때 시간만 잘 지키자) 홀랜드 검사 유형에 따른 설문내용과 직업 조사 하고 작성 Git - Workflow 연습 -2 (시간 부족으로 못함) AWS 배포 - S3 (시간 부족으로 못함)  2.</description>
    </item>
    
    <item>
      <title>Dreammaker-report-3</title>
      <link>/post/dreammaker-report-3/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/dreammaker-report-3/</guid>
      <description>1. 오늘의 To-do List (목록)  Git-Workflow - 연습 2 컴포넌트 구성 (목업) AWS 리액트 배포 AWS EC2 설정 AWS RDS 설정 데이터베이스 입력작업 (question, answer, holland 테이블 일부만 완료) 엔지니어 체크인 및 피드백 받기 (오후 3시 ~ 오후 4시 예정)  2. 오늘 논의 한 일 GIt-Workflow test-2 진행 중 이슈
  Workflow시에 pull-request 하고 업데이트 된 브랜치 정보를 자신의 저장소로 pull 해오는게 안된다. → 각자 remote연결을 통하여 문제 해결함</description>
    </item>
    
    <item>
      <title>Dreammaker-report-2</title>
      <link>/post/daily-project-report-2/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/daily-project-report-2/</guid>
      <description>DB Schema 만들기
UI 만들기
![](/post/2020-02-25-daily-project-report-2_files/Screen Shot 2020-02-25 at 3.14.40 PM.png)
![](/post/2020-02-25-daily-project-report-2_files/Screen Shot 2020-02-25 at 2.21.49 PM.png)
![](/post/2020-02-25-daily-project-report-2_files/Screen Shot 2020-02-25 at 3.15.45 PM.png)
![](/post/2020-02-25-daily-project-report-2_files/Screen Shot 2020-02-25 at 3.16.04 PM.png)</description>
    </item>
    
    <item>
      <title>Dreammaker-report-1</title>
      <link>/post/project/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/project/</guid>
      <description>팀명  Dreammaker  프로젝트 명  Dreammaker  Stand up Meeting time  매일 10시 30분  Team Rule  슬랙 접속시간은 모각코 형식으로 행아웃에서 또는 줌 에서 카메라를 켜놓고 각자 코딩 진행 한다. - 성용 코드 작성시 주석에 신경 쓸 것 (상대방이 이해할 수 있도록, 상대방의 생각과 내 생각이 다를 수 있다.) -민재 의견 조율 사항이 필요시 다수결로 해서 의견 조율 할 것 - 의영 1주일에 1번 정도는 refresh 타임을 갖자 (서로 어땠는지 , 프로젝트 방향에 대한 이야기, 또는 각자의 애로사항 등) - 의영 &amp;lt;토요일 오전타임&amp;gt;  Stack  Front End: Bootstrap,React,css,html,javasript Back End: express,mysql,nodejs Etc: api,eslint,prettier,redux  Project Step !</description>
    </item>
    
  </channel>
</rss>