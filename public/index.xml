<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home</title>
    <link>/</link>
    <description>Recent content on Home</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0900</lastBuildDate>
    
	    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0900</pubDate>
      
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>/tutorial/python/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/python/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;python-operators&#34;&gt;Python: &lt;strong&gt;Operators&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Arithmetic operators&lt;/li&gt;
&lt;li&gt;Assignment operators&lt;/li&gt;
&lt;li&gt;Comparison operators&lt;/li&gt;
&lt;li&gt;Logical operators&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;arithmetic-operator&#34;&gt;Arithmetic Operator&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Addition&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x + y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Subtraction&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x - y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Multiplication&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x * y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Division&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x / y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Modulus&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x % y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;**&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Exponentiation&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x ** y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;//&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Floor division&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x // y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;assignment-operators&#34;&gt;Assignment Operators&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x = 5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = 5&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;+=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x += 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x + 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x -= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x - 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;*=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x *= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x * 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;/=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x /= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x / 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x %= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x % 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;//=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x //= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x // 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;**=&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x &lt;code&gt;**= 3&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x ** 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;amp;=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x &amp;amp;= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x &amp;amp; 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;=&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;^=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x ^= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x ^ 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;gt;&amp;gt;=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x &amp;gt;&amp;gt;= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x &amp;gt;&amp;gt; 3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;lt;&amp;lt;=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;x &amp;lt;&amp;lt;= 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x = x &amp;lt;&amp;lt; 3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;comparison-operators&#34;&gt;Comparison Operators&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Equal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x == y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Not equal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x != y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Greater than&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x &amp;gt; y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Less than&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x &amp;lt; y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Greater than or equal to&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x &amp;gt;= y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Less than or equal to&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x  &amp;lt;= y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;python-logical-operators&#34;&gt;Python Logical Operators&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;and&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Returns True if both statements are true&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x &amp;lt; 5 and  x &amp;lt; 10&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;or&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Returns True if one of the statements is true&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;x &amp;lt; 5 or x &amp;lt; 4&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;not&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Reverse the result, returns False if the result is true&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;not(x &amp;lt; 5 and x &amp;lt; 10)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;exmple&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Print(1+1) 더하기
2
Print(1-1) 빼기
0
Print(1*1) 곱하기
1
Print(3**3) 제곱
18
Print(8/2) 나누기
4
Print(3/2*4) 순서대로 곱하기 나누기 우선 그다음에 빼기 더하기
6.0
Print(7//3) 몫구하기 (3이 몇번들어갈수 있는지)
2
Print(3%2) 나머지값구하기(나머지가 1 남는다)
1


# 연산자 우선 순위
# **
# *,/,//,%
# +, -

# 문자열 연산
# + : 문자열 끼리 붙여주는 역할 &amp;quot;Hi&amp;quot; + &amp;quot;Hello&amp;quot; =&amp;gt; &amp;quot;HiHello&amp;quot;
# * : &amp;quot;Hi&amp;quot;*3 =&amp;gt; “HiHiHi&amp;quot;

# 문자열을 표현하는 방법, 만드는 방법
&amp;quot;She said \&amp;quot;Hi\&amp;quot;&amp;quot; # &#39;She said &amp;quot;Hi&amp;quot;&#39;
&#39;I\&#39;m Jake&#39; # 특수문자나 특별한 알파벳 앞에 \(슬래시)를 붙여서 특수 기능을
# 수행하는 것을 이스케이핑 문자 혹은 이스케이핑 처리

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-variables&#34;&gt;Python: &lt;strong&gt;Variables&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;ariables are containers for storing data values.
Unlike other programming languages, Python has no command for declaring a variable.
A variable is created the moment you first assign a value to it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Example 1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
x = 5
y = &amp;quot;John&amp;quot;
print(x)
print(y)

&amp;gt;&amp;gt;5
&amp;gt;&amp;gt;John
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Example 2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
x = 4 # x is of type int
x = &amp;quot;Sally&amp;quot; # x is now of type str
print(x)

&amp;gt;&amp;gt;Sally
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x = &amp;quot;awesome&amp;quot;
print(&amp;quot;Python is &amp;quot; + x)

&amp;gt;&amp;gt;Python is awesome
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Variable Names&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume). Rules for Python variables:
A variable name must start with a letter or the underscore character
A variable name cannot start with a number
A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
Variable names are case-sensitive (age, Age and AGE are three different variables)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;# 변수 이름?
# 대소문자 구분
# 알파벳, 숫자, 한글 : 숫자는 맨앞에는 사용 금지
# 특수문자 : _
# 명사나 동사형

# 표기법
# sayHi : 두번째 단어부터 단어의 첫글자는 대문자
# SayHi : 모든 단어의 첫글자는 대문자
# say_hi : 모두 소문자, 단어사이에 _
# strSayHi : 변수명 앞에 변수의 타입을 기록
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-int-float-str&#34;&gt;Python: int float str&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;1-int-정수&#34;&gt;1.&lt;code&gt;int&lt;/code&gt;: 정수&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;x = input(&amp;quot;숫자를 입력해주세요.:&amp;quot;)
Y = input(&amp;quot;숫자를 입력해주세요.:”)

x = 20
y = 30

Print(x+y)
&amp;gt;&amp;gt;&amp;gt;2030



x = `int`(input(&amp;quot;숫자를 입력해주세요.:&amp;quot;))
Y = `int`(input(&amp;quot;숫자를 입력해주세요.:&amp;quot;))

x = 20
y = 30

Print(x+y)
&amp;gt;&amp;gt;&amp;gt;50
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-float-실수-소수점-나타내주는것&#34;&gt;2. &lt;code&gt;float&lt;/code&gt; :실수  () 소수점 나타내주는것&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;x = `float`(input(“숫자를 입력해주세요.:”)) &amp;gt;&amp;gt;20
Y = `float`(input(“숫자를 입력해주세요.:”)) &amp;gt;&amp;gt;30

Print(x+y)
50.0

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-str-문자-이것을-사용하면-숫자를-문자로-변환시킬수-있다&#34;&gt;3. &lt;code&gt;Str&lt;/code&gt;  :문자 이것을 사용하면 숫자를 문자로 변환시킬수 있다.&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;x = int(input(&amp;quot;숫자를 입력하세요.:&amp;quot;)
Y = int(input(&amp;quot;숫자를 입력하세요.:&amp;quot;)

sum = x + y

print(&amp;quot;두 수의 합은, sum, &amp;quot;입니다.&amp;quot;)
&amp;gt;&amp;gt;&amp;gt;두 수의 합은 50 입니다.


50  과 입니다 &amp;lt;&amp;lt;&amp;lt;를 붙이고싶다 또는 
문자를 숫자로 바꾸기 위해서 str 필요하다.

print(&amp;quot;두 수의 합은&amp;quot;&amp;quot;,`str`(sum),&amp;quot;입니다.&amp;quot;)

&amp;gt;&amp;gt;&amp;gt;&amp;gt;두 수의 합은 50입니다.



Print(1,2,3,4,end=&amp;quot;,&amp;quot;). &amp;lt;&amp;lt;&amp;lt; 콤마로 띄어쓴다.
print(1,2,3,4,sep=&amp;quot;,&amp;quot;)  &amp;lt;&amp;lt;&amp;lt;&amp;lt;  중간에 문자 집어넣기

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-format-string&#34;&gt;Python:Format_string&lt;/h2&gt;

&lt;hr /&gt;

&lt;h6 id=&#34;format-명령&#34;&gt;format 명령&lt;/h6&gt;

&lt;h5 id=&#34;데이터타입-s-문자열-c-한글자-d-정수-f-실수&#34;&gt;[데이터타입] : s(문자열), c(한글자), d(정수), f(실수)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;example exercise 1-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foramt_string = &amp;quot;섭씨 35도는 화씨 99도 입니다.&amp;quot;

foramt_string = &amp;quot;섭씨 %f도는 화씨 %f도 입니다.&amp;quot;


msg = foramt_string % (35.7, 99.23)
print(msg)

f 는 소수점 처리를 할수 있다.


foramt_string = &amp;quot;섭씨 &#39;%0.2f&#39;도는 화씨 &#39;%-.4f&#39;도 입니다.&amp;quot;
msg = foramt_string % (35.7, 99.23)
print(msg)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-variables-1&#34;&gt;Python: Variables&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;ariables are containers for storing data values.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x = 5
y = &amp;quot;John&amp;quot;
print(x)
print(y)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-conditional&#34;&gt;Python: conditional&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;
if (a &amp;gt; b):
    [처리문 실행문]
elif [조건문 조건식]:
    [실행문 처리문]
else:
    [실행문]
&amp;quot;&amp;quot;&amp;quot;
# 조건식 : 명제 -&amp;gt; 참과 거짓으로 판별할 수 있는 구문
# 참과 거짓 : True False
# a &amp;gt; b, a &amp;lt; b, a &amp;gt;= b, a &amp;lt;= b, a == b, a != b
# and, or
# not
# 0, &amp;quot;&amp;quot;, False, []
# 상태 : empty


if not empty:
    청소를 한다.

a = 7
b = 8
c = 9
a &amp;gt; b and a &amp;gt; c
a &amp;gt; b or a &amp;gt; c
not (a &amp;gt; c)

a &amp;lt; b
a &amp;gt;= b
a &amp;lt;= b
a == b
a != b    
    
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = int(input(&amp;quot;당신의 출생연도를 입력해주세요.:&amp;quot;))


age = 2019 - a + 1


if age &amp;gt;= 20:
print(&amp;quot;당신은 성인입니다.”)

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = int(input(&amp;quot;당신의 출생연도를 입력해주세요.:&amp;quot;))

age = 2019 - a + 1

if age &amp;gt;= 20:
print(&amp;quot;당신은 성인입니다.&amp;quot;)

else:
print(&amp;quot;당신은 성인이 아닙니다.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Example exercise 1-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 사용자의 키와 체중을 입력받아서
# bmi 계산하여 출력하세요
# bmi = 체중(kg) / (키(m)의 제곱)


height = input(&amp;quot;키를 입력하세요 : &amp;quot;)
height = float(height)




weight = input(&amp;quot;체중을 입력하세요 : &amp;quot;)
weight = float(weight)


bmi = weight / ((height/100)**2)




# 키와 체중을 입력받고
# bmi 계산하고
# 18.5 미만 = 저체중
# 18.5 이상 23 미만 = 정상체중
# 23 이상 = 과체중


bmi_level = &amp;quot;&amp;quot;
if bmi &amp;lt; 18.5:
bmi_level = &amp;quot;저체중&amp;quot;
elif 18.5 &amp;lt;= bmi &amp;lt; 23:
bmi_level = &amp;quot;정상체중&amp;quot;
else:
bmi_level =  &amp;quot;과체중&amp;quot;
print(bmi,bmi_level)

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Example exercise 1-2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
# 섭씨 -&amp;gt; 화씨로 바꾸는 프로그램
# 화시 -&amp;gt; 섭씨로 바꾸는 기능
# 메뉴 입력 시작
print(&amp;quot;-----MENU-----&amp;quot;)
print(&amp;quot;1. 섭씨 -&amp;gt; 화씨 변환&amp;quot;)
print(&amp;quot;2. 화씨 -&amp;gt; 섭씨 변환&amp;quot;)
print(&amp;quot;3. 프로그램 종료&amp;quot;)
menu = input(&amp;quot;메뉴를 선택하세요 : &amp;quot;)
# 메뉴 입력 끝


# 온도 계산 시작
if menu == &amp;quot;1&amp;quot;:
C = input(&amp;quot;섭씨 온도를 입력하세요 : &amp;quot;)
C = float(C)
F = C * 1.8 + 32
msg = &amp;quot;섭씨 &amp;quot;+str(C)+&amp;quot;도는 화씨 &amp;quot;+str(F)+&amp;quot;도 입니다.&amp;quot;
print(msg)
elif menu == &amp;quot;2&amp;quot;:
F = input(&amp;quot;화씨 온도를 입력하세요 : &amp;quot;)
F = float(F)
C = (F - 32) / 1.8
msg = &amp;quot;화씨 &amp;quot;+str(F)+&amp;quot;도는 섭씨 &amp;quot;+str(C)+&amp;quot;도 입니다.&amp;quot;
print(msg)
elif menu == &amp;quot;3&amp;quot;:
print(&amp;quot;프로그램을 종료합니다.&amp;quot;)
else:
print(&amp;quot;잘못 선택하셨습니다.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-try-except&#34;&gt;Python: try, except&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;
try:
    #[오류가 날지도 모르는 코드]
    a = int(&amp;quot;a&amp;quot;)
    print(&amp;quot;in&amp;quot;)
except ValueError:
    #[발생한 오류에 대응할 코드]
    print(&amp;quot;fired exception&amp;quot;)
except ZeroDivisionError:
    #[발생한 오류에 대응할 코드]
    print(&amp;quot;fired exception&amp;quot;)
except:
    #[발생한 오류에 대응할 코드]
    print(&amp;quot;fired exception&amp;quot;)
else:
    #[오류가 없이 지나왔을 경우 코드]
    print(&amp;quot;no error&amp;quot;)
finally:
    #[어쨋든 실행될 코드]
    print(&amp;quot;anyway&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;exercise 1-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
number = input(&amp;quot;정수를 입력하세요 : &amp;quot;)
try:
number = int(number)
except ValueError:
print(&amp;quot;정수가 아닙니다. 다시 입력하세요.&amp;quot;)
number = input(&amp;quot;정수를 입력하세요 : &amp;quot;)
number = int(number)


result = number*number
print(result)


# 입력받은 정수의 제곱 값을 출력하는 프로그램
# 만약 숫자가 아니라면 다시 입력하라는 메시지를 출력한다.
# 다시 입력 하라는 메시지는 1회만
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-while&#34;&gt;Python: While&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;
while [조건식]:
    [실행문]
    [실행문]
    [실행문]
    [실행문]

&amp;quot;&amp;quot;&amp;quot;
1 예) 이런식으로 많이 쓰인다.

While True:
    Try:
    Break
    except
2 예)


while True:
    # 정수를 입력받는다. 정수가 입력될 때까지
    number = input(&amp;quot;정수를 입력하세요 : &amp;quot;)
    try:
        number = int(number)
        break
    except:
        print(&amp;quot;정수가 아닙니다. 다시 입력하세요.&amp;quot;)


print(number)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;exercise&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
# 섭씨 -&amp;gt; 화씨로 바꾸는 프로그램
# 화시 -&amp;gt; 섭씨로 바꾸는 기능
# 메뉴 입력 시작
print(&amp;quot;-----MENU-----&amp;quot;)
print(&amp;quot;1. 섭씨 -&amp;gt; 화씨 변환&amp;quot;)
print(&amp;quot;2. 화씨 -&amp;gt; 섭씨 변환&amp;quot;)
print(&amp;quot;3. 프로그램 종료&amp;quot;)
menu = input(&amp;quot;메뉴를 선택하세요 : &amp;quot;)
# 메뉴 입력 끝


# 온도 계산 시작
if menu == &amp;quot;1&amp;quot;:
while True:
    try:
        C = input(&amp;quot;섭씨 온도를 입력하세요 : &amp;quot;)
        C = float(C)
        break
    except:
        print(&amp;quot;다시 입력하세요.&amp;quot;)


F = C * 1.8 + 32
msg = &amp;quot;섭씨 &amp;quot;+str(C)+&amp;quot;도는 화씨 &amp;quot;+str(F)+&amp;quot;도 입니다.&amp;quot;
print(msg)
elif menu == &amp;quot;2&amp;quot;:
while True:
    try:
        F = input(&amp;quot;화씨 온도를 입력하세요 : &amp;quot;)
        F = float(F)
        break
    except:
        print(&amp;quot;다시 입력하세요.&amp;quot;)
C = (F - 32) / 1.8
msg = &amp;quot;화씨 &amp;quot;+str(F)+&amp;quot;도는 섭씨 &amp;quot;+str(C)+&amp;quot;도 입니다.&amp;quot;
print(msg)
elif menu == &amp;quot;3&amp;quot;:
print(&amp;quot;프로그램을 종료합니다.&amp;quot;)
else:
print(&amp;quot;잘못 선택하셨습니다.&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-for&#34;&gt;Python: for&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Description&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# for [name] in [bucket]:
#     [실행문]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
for n in range(10):
print(n)
print(n*n)

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;for-range-활용해서-1-100까지의-홀수의-합을-구하는-프로그램&#34;&gt;for, range 활용해서 1~100까지의 홀수의 합을 구하는 프로그램&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;total = 0
for x in range(1,101,2):
    total += x
    total = total + x
print(total)

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# &amp;quot;Range는 횟수 용으로 많이 쓰인다.&amp;quot;
# range(Y) : 0 ~ Y-1까지
# range(X,Y) : X ~ Y-1까지
# range(X,Y,Z) : X ~ Y-1까지인데, Z씩 증감
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;for n in range(0,12.2):
    print(n)
2
4
6
8
10
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-module&#34;&gt;Python: Module&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;
import datetime
변수 = datetime.datetime.now()
Print(변수)
Print(변수.strftime(“%y-%m-%d&amp;quot;))
Print(변수.year)
Print(변수.hour)
Print(변수.corosecond)

&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;윤년-프로그램&#34;&gt;윤년 프로그램&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;# 윤년 프로그램을 짜본다.
# 윤년 2월 29일까지 있는 해
# 연도가 400으로 나누어 떨어지면 윤년
# 연도가 100으로 나누어 떨어지면 윤년 x
# 연도가 4로 나누어 떨어지면 윤년
# 1. 올해의 윤년여부 출력
# 2. 사용자의 입력을 받아서 윤년 여부 출력
# 3. 프로그램 종료
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
import datetime
while True:
    print(&amp;quot;----Menu----&amp;quot;)
    print(&amp;quot;1. 올해 윤년 여부&amp;quot;)
    print(&amp;quot;2. 입력 받은 연도 윤년 여부&amp;quot;)
    print(&amp;quot;3. 프로그램 종료&amp;quot;)
    menu = input(&amp;quot;메뉴를 선택하세요 : &amp;quot;)


    if menu == &amp;quot;1&amp;quot;:
        current_time = datetime.datetime.now()
        year = current_time.year
        if (year % 4 == 0 and year % 100 !=0) or year % 400 == 0:
            print(&amp;quot;윤년입니다.&amp;quot;)
        else:
            print(&amp;quot;윤년이 아닙니다.&amp;quot;)
    elif menu == &amp;quot;2&amp;quot;:
        while True:
            try:
                year = input(&amp;quot;판별하고자 하는 연도를 입력하세요 : &amp;quot;)
                year = int(year)
                break
            except:
                print(&amp;quot;다시 입력하세요.&amp;quot;)
        if (year % 4 == 0 and year % 100 !=0) or year % 400 == 0:
            print(&amp;quot;윤년입니다.&amp;quot;)
        else:
            print(&amp;quot;윤년이 아닙니다.&amp;quot;)
    elif menu == &amp;quot;3&amp;quot;:
        break
        # exit()
    else:
        print(&amp;quot;없는 메뉴 입니다.&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-function&#34;&gt;Python: function&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;# def [함수이름]([매개변수,입력값]):
#     [실행구문]
#     [return (반환값, 출력값)]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;example 1-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;A = 1
B = 2
x = 1+2
Print(x)

&amp;gt;&amp;gt;&amp;gt;3

함수 이용하기

def x (A,B) : 
return A+B
print (x(1,2))

&amp;gt;&amp;gt;&amp;gt;3

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;example 1-2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def sayHi():
print(&amp;quot;Hello Python&amp;quot;)


sayHi()

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;exercise 1-2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
# 1~9까지의 각각의 제곱을 출력하는 함수를 만드세요.
def PrintSquare():
for x in range(1,10):
    print(x*x)


PrintSquare()
PrintSquare()
PrintSquare()
PrintSquare()
PrintSquare()


def PrintSquare2(endNumber):
for x in range(1,endNumber+1):
    print(x*x)


PrintSquare2(10)


&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;exercise 1-3&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 두개의 숫자를 전달 받아서
# 그 두 숫자의 합을 출력하는 함수
def printSum(number1, number2):
print(number1+number2)


printSum(10, 22)

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;exercise 1-4&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 별줄수 만들기

&amp;quot;&amp;quot;&amp;quot;
사용자에게 줄 수를 입력받아서
해당 줄 수만큼 별을 출력하시오.
*
***
*****
&amp;quot;&amp;quot;&amp;quot;


line_count = input(&amp;quot;출력할 줄 수를 입력하세요 : &amp;quot;)
line_count = int(line_count)


max_width = line_count*2 - 1
format_string = &amp;quot;{:^&amp;quot;+str(max_width)+&amp;quot;s}&amp;quot;
for count in range(line_count):
#blank_count = line_count-(count+1)
#print(&amp;quot; &amp;quot; * blank_count, end=&amp;quot;&amp;quot;)
start_count = 2 * count + 1




msg = format_string.format(&amp;quot;*&amp;quot;*start_count)
print(msg)

*
***
*****

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-crawler&#34;&gt;Python: Crawler&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;1-변수만들어서-저장하기-data-text-모든-리소스-불러오기&#34;&gt;1. 변수만들어서 저장하기 data.text 모든 리소스 불러오기&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;
url = &amp;quot;https://www.naver.com/&amp;quot;
requests.get(url)
data = requests.get(url)
print(data.text)

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-제대로-돌아가고-있는지-확인&#34;&gt;2. 제대로 돌아가고 있는지 확인&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;print (data.status_code)

“””
200
“””

200번대 - 정상
300번대 - redirect
400번대 - 리소스 오류
500번대 - 소스코드 오류
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-test-해보기-만약-이게-맞다면-응답해라&#34;&gt;3. Test 해보기 만약 이게 맞다면 응답해라&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;
if data.status_code == requests.codes.ok:
    print(&amp;quot;work out”)


&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;4-from-bs4-import-beautifulsoup-html를-해석해주는-역활&#34;&gt;4. From bs4 import BeautifulSoup HTML를 해석해주는 역활&lt;/h5&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;Parsing(파싱) text 파일을 우리가 원하는 것을 불러오기 위해서는       parsing 필요하다.이럴때 BeautifulSoup 이라는 order 필요.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;html = BeautifulSoup(data.text,&amp;quot;html.parser&amp;quot;)
links = html.select(&amp;quot;.PM_CL_realtimeKeyword_list_base .ah_a”)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;나열방식이 틀림&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(1)     for index,keyword in enumerate ( links,start=1 ) :
        print(index,keyword)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1 &lt;sdsdsdsd&gt;
2 &lt;sdsdsdsd&gt;
3 &lt;sdsdsdss&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(2).   For keyword in links[:3]:
       For keyword in links[::3]:
       Print(keyword)



(3)

for link in links:
    rank = link.select_one(&amp;quot;.ah_r&amp;quot;).text
    keyword = link.select_one(&amp;quot;.ah_k&amp;quot;).text
    print(rank,keyword,link.attrs[&amp;quot;href&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1 왕종명 &lt;a href=&#34;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EC%99%95%EC%A2%85%EB%AA%85&amp;amp;sm=top_lve&amp;amp;ie=utf8&#34; target=&#34;_blank&#34;&gt;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EC%99%95%EC%A2%85%EB%AA%85&amp;amp;sm=top_lve&amp;amp;ie=utf8&lt;/a&gt;
2 grn &lt;a href=&#34;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=grn&amp;amp;sm=top_lve&amp;amp;ie=utf8&#34; target=&#34;_blank&#34;&gt;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=grn&amp;amp;sm=top_lve&amp;amp;ie=utf8&lt;/a&gt;
3 백예린 &lt;a href=&#34;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EB%B0%B1%EC%98%88%EB%A6%B0&amp;amp;sm=top_lve&amp;amp;ie=utf8&#34; target=&#34;_blank&#34;&gt;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EB%B0%B1%EC%98%88%EB%A6%B0&amp;amp;sm=top_lve&amp;amp;ie=utf8&lt;/a&gt;
4 붐붐파워 &lt;a href=&#34;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EB%B6%90%EB%B6%90%ED%8C%8C%EC%9B%8C&amp;amp;sm=top_lve&amp;amp;ie=utf8&#34; target=&#34;_blank&#34;&gt;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EB%B6%90%EB%B6%90%ED%8C%8C%EC%9B%8C&amp;amp;sm=top_lve&amp;amp;ie=utf8&lt;/a&gt;
5 2019 스타벅스 벚꽃 md &lt;a href=&#34;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=2019+%EC%8A%A4%ED%83%80%EB%B2%85%EC%8A%A4+%EB%B2%9A%EA%BD%83+md&amp;amp;sm=top_lve&amp;amp;ie=utf8&#34; target=&#34;_blank&#34;&gt;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=2019+%EC%8A%A4%ED%83%80%EB%B2%85%EC%8A%A4+%EB%B2%9A%EA%BD%83+md&amp;amp;sm=top_lve&amp;amp;ie=utf8&lt;/a&gt;
6 나르샤 &lt;a href=&#34;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EB%82%98%EB%A5%B4%EC%83%A4&amp;amp;sm=top_lve&amp;amp;ie=utf8&#34; target=&#34;_blank&#34;&gt;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EB%82%98%EB%A5%B4%EC%83%A4&amp;amp;sm=top_lve&amp;amp;ie=utf8&lt;/a&gt;
7 아소방 매트 &lt;a href=&#34;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EC%95%84%EC%86%8C%EB%B0%A9+%EB%A7%A4%ED%8A%B8&amp;amp;sm=top_lve&amp;amp;ie=utf8&#34; target=&#34;_blank&#34;&gt;http://search.naver.com/search.naver?where=nexearch&amp;amp;query=%EC%95%84%EC%86%8C%EB%B0%A9+%EB%A7%A4%ED%8A%B8&amp;amp;sm=top_lve&amp;amp;ie=utf8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;rdquo;&amp;ldquo;&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bootstrap</title>
      <link>/tutorial/bootstrap/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/bootstrap/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;bs-image-img-fluid&#34;&gt;BS_image: &lt;strong&gt;img-fluid&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Create responsive images by adding an &lt;code&gt;.img-fluid&lt;/code&gt; class to the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag. The image will then scale nicely to the parent element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img class=&amp;quot;img-fluid&amp;quot; src=&amp;quot;img_chania.jpg&amp;quot; alt=&amp;quot;Chania&amp;quot;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;bs-spacing-my&#34;&gt;BS_Spacing: &lt;strong&gt;my&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Assign responsive-friendly &lt;code&gt;margin&lt;/code&gt; or &lt;code&gt;padding&lt;/code&gt; values to an element or a subset of its sides with shorthand classes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;my&amp;quot;&amp;gt;
  Centered element
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CSS</title>
      <link>/tutorial/css/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/css/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;css-lt-style-gt-tag&#34;&gt;Css: &lt;strong&gt;&amp;lt;style&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;a {
  color:red
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;dd&gt;a :  selector(선택자)&lt;/dd&gt;
&lt;dd&gt;{Color:red}; : declaration (선언)&lt;/dd&gt;
&lt;dd&gt;{Color} :  property (속성)&lt;/dd&gt;
&lt;dd&gt;{Color:red} : property value (속성값)&lt;/dd&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css-boxmodel&#34;&gt;Css: &lt;strong&gt;BoxModel&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;{
font-size:20px;
text-align:center;
text-decoration:none; : 밑줄없애기
text-decoration:underline; : 언더라인 만들어라
Border-bottom:red 20px solid;
Border-right: lightblue 20px solid;
Border-right:none; (오른쪽에 있는 선 없애기)
Margin:20px; 가장자리
Padding:20px;
width:20px;  : 폭
Display:none; 
Display:block; : 전체화면을 이용해라 (block level element)
Display:inline; : 부분화면을 이용해라 (inline element)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css-wrapper&#34;&gt;Css: &lt;strong&gt;wrapper&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Most basic example&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;
#wrapper {
    width: 500px;
    margin: 0 auto;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;wrapper&amp;quot;&amp;gt;
        Piece of text inside a 500px width div centered on the page
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;How the principle works&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create your wrapper and assign it a certain width. Then apply an automatic horizontal margin to it by using &lt;code&gt;margin: 0 auto;&lt;/code&gt; or &lt;code&gt;margin-left: auto;&lt;/code&gt; &lt;code&gt;margin-right: auto;.&lt;/code&gt; The automatic margins make sure your element is centered.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css-media-queries&#34;&gt;Css: &lt;strong&gt;@media queries&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;@media(max-width:800px) :  screen width &amp;lt; 800px 스크린이 800px 보다 작을때 명령을 내린다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;@media(min-width:800px)  : screen width  &amp;gt; 800px스크린이 800px 보다 클때 명령을 내린다.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;
    @media(max-width:800px) {
    p {
        font-size: 1px
        font-weight
        font-height
        Display:block;
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css-grid-template-columns&#34;&gt;Css: &lt;strong&gt;grid-template-columns&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Defines the columns of a grid container. You can specify the width of a column by using a keyword (like auto) or a length (like 10px). The number of columns is determined by the number of values defined in the space-separated list.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;grid-template-columns: none;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;No columns are defined, so you only have one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;/tutorial/HTML_files/test1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;grid-template-columns: auto auto auto;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use the keyword auto so that each column resizes itself automatically.
&lt;img src=&#34;/tutorial/CSS_files/test2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;grid-template-columns: 80px auto 1rem;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can mix the units.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;/tutorial/CSS_files/test3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;grid-template-columns: 40px 1fr 2fr;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use the fr flex unit to distribute the remaining space across all flex columns.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;/tutorial/CSS_files/test4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>/tutorial/git/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/git/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;git-pwd&#34;&gt;Git : &lt;strong&gt;pwd&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;print working Directory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-ls&#34;&gt;Git : &lt;strong&gt;ls&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;print working List&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-cd&#34;&gt;Git :&lt;strong&gt;cd&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;go back to beginning&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-cd-1&#34;&gt;Git :&lt;strong&gt;cd -&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;previous directory (or back)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-init&#34;&gt;Git :&lt;strong&gt;init&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;Create an empty Git repository or reinitialize an existing one&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-clone&#34;&gt;Git :&lt;strong&gt;clone&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;Clone a repository into a new directory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-add&#34;&gt;Git :&lt;strong&gt;add .&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;Add all file contents to the index&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-add-1&#34;&gt;Git : &lt;strong&gt;add&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;one file add&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;git add jung.html
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-rm&#34;&gt;Git :&lt;strong&gt;rm&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;Remove files&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-rm-f&#34;&gt;Git :&lt;strong&gt;rm -f&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;Remove files and directory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-mkdir&#34;&gt;Git :&lt;strong&gt;mkdir&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;create directory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git mkdir jung

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-touch&#34;&gt;Git :&lt;strong&gt;touch&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;create file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git touch jung.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-commit-m&#34;&gt;Git :&lt;strong&gt;commit -m &amp;ldquo;&amp;rdquo;&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;write message into github&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-remote-add-origin&#34;&gt;Git :&lt;strong&gt;remote add origin&amp;rdquo;&amp;rdquo;&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;link local to github&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;Git remote add origin &amp;quot;https://github.com/J-E-Y/test_2.git&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-push&#34;&gt;Git : &lt;strong&gt;Push&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;git push -u origin master  최종 깇허브에 올리기 
git push -u origin master  
git push -f origin master ( 강제로)

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-log&#34;&gt;Git : &lt;strong&gt;log&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;git log  기록 업데이트한 기록 확인

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-status&#34;&gt;Git : &lt;strong&gt;status&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;git 현재 진행 상태 보기
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;git-add-your-github-email-and-username-to-git&#34;&gt;Git : &lt;strong&gt;Add your github email and username to git&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.email &amp;quot;yourGitHub@email.com&amp;quot;
git config --global user.name &amp;quot;yourGitHubusername&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>HTML( hyper text markup Language)</title>
      <link>/tutorial/html/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/html/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-strong-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;strong&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;strong&amp;gt; tag gives text a strong emphasis which traditionally means that the text is displayed as bold by the browser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;what&amp;rsquo;s the difference bewteen &amp;lt;strong&amp;gt; tag and &amp;lt;b&amp;gt; ?&lt;/p&gt;

&lt;p&gt;strong tag :시각장애인들 낭독기를 사용할때 조금 더 굵 게 읽는다.&lt;/p&gt;

&lt;p&gt;b tag :평상시대로 굵게 읽는다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Emphasized text goes here&amp;lt;/strong&amp;gt; but not here&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sample Output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Emphasized text goes here but not here
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-h1-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;h1&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &lt;strong&gt;&amp;lt;h1&amp;gt;tag&lt;/strong&gt; tag defines the highest level or most important heading in the HTML document. This tag is also commonly referred to as the &lt;strong&gt;&amp;lt;h1&amp;gt;tag&lt;/strong&gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Heading 1 goes here&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample Output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Heading 1 goes here
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-br-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;br&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;br&amp;gt;tag defines a line break within text in the HTML document. This tag is also commonly referred to as the &amp;lt;&amp;lt;br&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;The paragraph starts here&amp;lt;br&amp;gt;
and ends on the next line.&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sample Output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The paragraph starts here
and ends on the next line.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-nbsp-making-space&#34;&gt;html : &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;  (making space)&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;HTML will only display one space between words, no matter how many times you press the space bar. To force an extra space to show up, type &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; in the area where you want to force the space.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-p-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;p&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;p&amp;gt; tag defines a paragraph in the HTML document. This tag is also commonly referred to as the &amp;lt;p&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;The paragraph goes here.&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this 

The paragraph goes here.

this
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-hr-tag&#34;&gt;html : &lt;code&gt;&amp;lt;Hr/&amp;gt;&lt;/code&gt; tag&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;making line break with line&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-hr-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;hr/&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;hr/&amp;gt; tag defines a thematic break between paragraphs in HTML5, and a horizontal rule in HTML 4.01. This tag is also commonly referred to as the &amp;lt;hr/&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;hr/&amp;gt; element makes line bewteen two paragraphs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;This is the first paragraph.&amp;lt;/p&amp;gt;
&amp;lt;hr&amp;gt;
&amp;lt;p&amp;gt;This is the second paragraph.&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-div-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;div&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;p&amp;gt; tag defines a generic container in an HTML document that is generally used to group elements. This tag is also commonly referred to as the &amp;lt;p&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;p&amp;gt; element is found within the &lt;body&gt; tag.
The &lt;div&gt; tag is generally used to group elements together.
&amp;lt;p&amp;gt;&amp;lt;p&amp;gt; :element is a block-level element.&lt;/p&gt;

&lt;p&gt;The &amp;lt;p&amp;gt; element is a block-level element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;

&amp;lt;div&amp;gt;
&amp;lt;div&amp;gt;this is the type of elemnt &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-span-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;span&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;span&amp;gt; tag defines a generic inline container in an HTML document. This tag is also commonly referred to as the &amp;lt;&amp;lt;span&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;lt;span&amp;gt; tag is is generally used for styling purposes when there is no other element to use.
&amp;lt;span&amp;gt; tag is a inline-level element
&amp;lt;span&amp;gt; tag does not inherently represent anything&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;span&amp;gt;Span text goes here&amp;lt;/span&amp;gt; and not here&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;


&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;span class=&amp;quot;red_text&amp;quot;&amp;gt;Span text goes here&amp;lt;/span&amp;gt; and not here&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-nav-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;nav&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;nav&amp;gt; tag is an HTML5 element that defines a section with navigation links in the HTML document. This tag is also commonly referred to as the &amp;lt;nav&amp;gt; element. It is used to define a block of navigation links, either within the current document or to other documents&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;nav&gt; tag is used to create navigation in the HTML document.For IE browsers older than IE 9, use HTML5shiv which is a javascript workaround to provide support for the new HTML5 elements such as: &amp;lt;header&amp;gt;, &amp;lt;main&amp;gt;, &amp;lt;article&amp;gt;, &amp;lt;section&amp;gt;, &amp;lt;aside&amp;gt;, &amp;lt;nav&amp;gt;, &amp;lt;footer&amp;gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;body&amp;gt;
&amp;lt;nav&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/section1/index.html&amp;quot;&amp;gt;Section1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/section2/index.html&amp;quot;&amp;gt;Section2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/section3/index.html&amp;quot;&amp;gt;Section3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-ul-gt-tag-부모태그&#34;&gt;html : &lt;strong&gt;&amp;lt;ul&amp;gt;tag&lt;/strong&gt; (부모태그)&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;ul&amp;gt; tag defines an unordered list in the HTML document. This tag is also commonly referred to as the &amp;lt;ul&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;ul&amp;gt; element is found within the &lt;body&gt; tag.
The &amp;lt;ul&amp;gt; tag is made up of &lt;li&gt; tags.
Use the &amp;lt;ul&amp;gt; tag when the list items have no numerical ordering.
You can nest &amp;lt;ol&amp;gt;, &amp;lt;ul&amp;gt; and &amp;lt;ul&amp;gt;menu lists.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Second item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Third item&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sample Output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* First item
* Second item
* Third item

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-li-gt-tag-부모태그&#34;&gt;html : &lt;strong&gt;&amp;lt;li&amp;gt;tag&lt;/strong&gt; (부모태그)&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;li&amp;gt; tag defines a list item in &amp;lt;ol&amp;gt;, &amp;lt;ul&amp;gt; or &amp;lt;menu&amp;gt; in the HTML document. This tag is also commonly referred to as the &amp;lt;li&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Second item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Third item&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sample Output 1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;ol&amp;gt;
&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Second item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Third item&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sample Output 2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;menu type=&amp;quot;toolbar&amp;quot;&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;menu label=&amp;quot;File&amp;quot;&amp;gt;
  &amp;lt;button type=&amp;quot;button&amp;quot; onclick=&amp;quot;new()&amp;quot;&amp;gt;New&amp;lt;/button&amp;gt;
  &amp;lt;button type=&amp;quot;button&amp;quot; onclick=&amp;quot;save()&amp;quot;&amp;gt;Save&amp;lt;/button&amp;gt;
&amp;lt;/menu&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;menu label=&amp;quot;Edit&amp;quot;&amp;gt;
  &amp;lt;button type=&amp;quot;button&amp;quot; onclick=&amp;quot;copy()&amp;quot;&amp;gt;Copy&amp;lt;/button&amp;gt;
  &amp;lt;button type=&amp;quot;button&amp;quot; onclick=&amp;quot;paste()&amp;quot;&amp;gt;Paste&amp;lt;/button&amp;gt;
&amp;lt;/menu&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;/menu&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Note&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The &amp;lt;li&amp;gt; tag is used within &amp;lt;ol&amp;gt;, &amp;lt;ul&amp;gt; or &amp;lt;menu&amp;gt;.
You can nest &amp;lt;ol, &amp;lt;ul&amp;gt; and &amp;lt;menu&amp;gt; lists. (자식태그) li 태그는 반드시 부모태그를 가지고 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-ol-gt-tag&#34;&gt;html : &lt;strong&gt;&amp;lt;ol&amp;gt;tag&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &amp;lt;ol&amp;gt; tag defines an ordered list in the HTML document. This tag is also commonly referred to as the &amp;lt;ol&amp;gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;ol&amp;gt;
&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Second item&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Third item&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sample Output&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;First item&lt;/li&gt;
&lt;li&gt;Second item&lt;/li&gt;
&lt;li&gt;Third item&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The &amp;lt;ol&amp;gt; tag is made up of &amp;lt;li&amp;gt; tags.
Use the &amp;lt;ol&amp;gt; tag when the list items have numeric, meaningful ordering.
You can nest &amp;lt;ol&amp;gt;, &amp;lt;ul&amp;gt; and &amp;lt;menu&amp;gt; lists.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-container&#34;&gt;html : &lt;strong&gt;container&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In HTML, the container is the area enclosed by the beginning and ending tags. For example &amp;lt; HTML &amp;gt; encloses an entire document while other tags may enclose a single word, paragraph, or other elements. In HTML code, all container must have a start and stop tag to close the container. Without a stop tag the start tag will apply to the entire document.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    ...
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;container&amp;quot;&amp;gt;
      ...
    &amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The container div, and sometimes content div, are almost always used to allow for more sophisticated CSS styling. The body tag is special in some ways. Browsers don&amp;rsquo;t treat it like a normal div; its position and dimensions are tied to the browser window.&lt;/p&gt;

&lt;p&gt;But a container div is just a div and you can style it with margins and borders. You can give it a fixed width, and you can center it with margin-left: auto; margin-right: auto.&lt;/p&gt;

&lt;p&gt;Plus, content, like a copyright notice for example, can go on the outside of the container div, but it can&amp;rsquo;t go on the outside of the body, allowing for content on the outside of a border.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-cashing&#34;&gt;html : &lt;strong&gt;cashing&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;파일을 따로 만든후 저장해놓는것&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;how to use it?&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;lt;link rel=&amp;ldquo;stylesheet&amp;rdquo; href=“파일이름&amp;rdquo;&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Sample Output&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;
&amp;lt;!doctype html&amp;gt;

&amp;lt;html&amp;gt;
&amp;lt;title&amp;gt;web1 - Son&amp;lt;/title&amp;gt;
&amp;lt;meta charset=&amp;quot;ut-8&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;style.css&amp;quot;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-lt-form-gt&#34;&gt;html : &lt;strong&gt;&amp;lt;form&amp;gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML &lt;code&gt;&amp;lt;form&amp;gt; tag&lt;/code&gt; is used to create a form on a web page that has interactive controls for user input. This tag is also commonly referred to as the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;
&amp;lt;body&amp;gt;
  &amp;lt;form action=&amp;quot;&amp;quot; method=&amp;quot;get&amp;quot;&amp;gt;
    Company: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;company&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
    Address: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Submit&amp;quot;&amp;gt;
  &amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sample Output&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/tutorial/HTML_files/Screen Shot 2019-06-01 at 9.40.42 PM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>/tutorial/javascript/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;1-data-type&#34;&gt;1.&lt;strong&gt;data type&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;자료형이란&#34;&gt;자료형이란?&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;어떤 종류의 데이터를 사용하는 것이지 컴퓨터에게 알려주는 것
자료형마다 사용 가능한 연산자(Operator)를 따로 가지고 있습니다!
자료형이 같아야 연산을 할 수 있습니다!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;자료형의-종류&#34;&gt;자료형의 종류&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Number :숫자&lt;/li&gt;
&lt;li&gt;String :문자&lt;/li&gt;
&lt;li&gt;Boolean :true and False&lt;/li&gt;
&lt;li&gt;Null : 값이 비어있다&lt;/li&gt;
&lt;li&gt;Undefined :값이 정의되지 않았다&lt;/li&gt;
&lt;li&gt;symbol(new in ECMAScript 6)
and Object :&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;1-number-type-숫자&#34;&gt;1. Number type (숫자)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var firstNum = 10;     // 소수점을 사용하지 않은 표현
var secondNum = 10.00; // 소수점을 사용한 표현
var thirdNum = 10e6;   // 10000000
var fourthNum = 10e-6; // 0.00001
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;length&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a = &amp;quot;hello&amp;quot;
a.length;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;slice :자르기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a = &amp;quot;KheLLo&amp;quot;
a[0];
a[1] = &amp;quot;H&amp;quot;; //안 됨


a.slice(1,4);
a.toUpperCase(); : 대문자로 바뀐
a.toLowerCase(); : 소문자로 바뀐다

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;2-string-문자열&#34;&gt;2. String (문자열)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;I am String&amp;quot;;
&amp;quot;Hello &amp;quot; + &amp;quot;world&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-boolean-불리언&#34;&gt;3. Boolean (불리언)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;true;
false;
5 &amp;gt; 3;
5 == 5;
5 &amp;gt; 5;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;4-the-typeof-operator-데이터유형을-알려주는-중요한-연산자&#34;&gt;4. The typeof Operator: 데이터유형을 알려주는 중요한 연산자!&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;typeof 10;        // number 타입
typeof &amp;quot;문자열&amp;quot;;  // string 타입
typeof true;      // boolean 타입
typeof undefined; // undefined 타입
typeof null;      // object 타입

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;5-symbol-심볼&#34;&gt;5. symbol (심볼)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;심볼 타입은 ECMAScript 6부터 새롭게 추가된 타입이다.
심볼은 유일하고 변경할 수 없는 타입으로, 객체의 프로퍼티를 위한 식별자로 사용할 수 있다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var sym = Symbol(&amp;quot;javascript&amp;quot;);  // symbol 타입
var symObj = Object(sym);        // object 타입
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;6-object-객체&#34;&gt;6. object (객체)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;자바스크립트의 기본 타입은 객체(object)이다. 객체(object)란 실생활에서 우리가 인식할 수 있는 사물로 이해할 수 있다. 객체는 여러 프로퍼티(property)나 메소드(method)를 같은 이름으로 묶어놓은 일종의 집합체이다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var dog = { name: &amp;quot;해피&amp;quot;, age: 3 }; // 객체의 생성
// 객체의 프로퍼티 참조
document.getElementById(&amp;quot;result&amp;quot;).innerHTML =
&amp;quot;강아지의 이름은 &amp;quot; + dog.name + &amp;quot;이고, 나이는 &amp;quot; + dog.age + &amp;quot;살 이다.&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;2-variable&#34;&gt;&lt;strong&gt;2.Variable&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;using-variables&#34;&gt;Using Variables&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;var x = 10;

x + 5 ; // =&amp;gt; 15

x ; // =&amp;gt; 10

once we have created our variables,
we can use their name as a substitute for their value elsewhere in our program.


&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;declaring-a-variable-without-a-vaue&#34;&gt;Declaring a variable without a Vaue&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;
Creating a variable in JavaScript is called &amp;quot;declaring&amp;quot; a variable.

1.var carName;
After the declaration, the variable has no value (technically it has the value of undefined).


To assign a value to the variable, use the equal sign:

2. carName = &amp;quot;Volvo&amp;quot;;   // carName 를 Volvo 로 변경할때 var 없이 만든다 cos 먼저 선언을 했기 때문이다. 

2. var carName = &amp;quot;Volvo&amp;quot;;


&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;changing-a-variable-s-value&#34;&gt;Changing a Variable’s value&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;
var pokemon = charmander

pokemon = heelo


Notice that When you change the value of a variable, &amp;quot;you don’t need to use the var keyword&amp;quot;The var keyword is only needed for creating new variables.


&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;variable-scope-변수의-유효-범위&#34;&gt;variable scope 변수의 유효 범위&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;local variable 지역 변수&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Variables declared inside a function body are in the Local scope.&lt;/p&gt;

&lt;p&gt;지역 변수(local variable)란 함수 내에서 선언된 변수를 가리킨다.
이러한 지역 변수는 변수가 선언된 함수 내에서만 유효하며, 함수가 종료되면 메모리에서 사라진다.함수의 매개변수 또한 함수 내에서 정의되는 지역 변수처럼 동작한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex 1-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var greeting = &amp;quot;Hello&amp;quot;;

function greetSomeone() {
	var firstName = &amp;quot;john&amp;quot;
	return greeting + &amp;quot; &amp;quot; + firstName;
}

greetSomeone
firstName; // = &amp;gt; Error


Function(greetSomeone) is working but &amp;quot;firstName&amp;quot;&amp;quot; is Error Because we declared our name variable inside the scope of our greetSomeone function.


&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;global variable  전역 변수&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Variables declared outside a function body are in the global scope.&lt;/p&gt;

&lt;p&gt;전역 변수(global variable)란 함수의 외부에서 선언된 변수를 가리킨다.
이러한 전역 변수는 프로그램의 어느 영역에서나 접근할 수 있으며, 웹 페이지가 닫혀야만 메모리에서 사라진다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex 1-2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;quot;But!!!!!!! if you do this it works well&amp;quot;!!

var greeting = &amp;quot;Hello&amp;quot;;
var firstName = &amp;quot;john&amp;quot;

function greetSomeone() {
	firstName = &amp;quot;JJ&amp;quot;
	return greeting + &amp;quot; &amp;quot;+ firstName;
}


firstNmae // = &amp;gt; JJ

Because you changed a variable the was defined in an outer scope

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;3-operator&#34;&gt;&lt;strong&gt;3.Operator&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;arithmetic-operator-산술-연산자&#34;&gt;arithmetic operator (산술 연산자)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;+	왼쪽 피연산자의 값에 오른쪽 피연산자의 값을 더함.
-	왼쪽 피연산자의 값에서 오른쪽 피연산자의 값을 뺌.
*	왼쪽 피연산자의 값에 오른쪽 피연산자의 값을 곱함.
/	왼쪽 피연산자의 값을 오른쪽 피연산자의 값으로 나눔.
%	왼쪽 피연산자의 값을 오른쪽 피연산자의 값으로 나눈 후, 그 나머지를 반환함

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var x = 10, y = 4;
document.write(x + y + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // 14
document.write(x - y + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // 6
document.write(x * y + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // 40
document.write(x / y + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // 2.5
document.write(x % y);          // 2

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;assignment-operator-대입-연산자&#34;&gt;assignment operator (대입 연산자)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;=	왼쪽 피연산자에 오른쪽 피연산자의 값을 대입함.
+=	왼쪽 피연산자의 값에 오른쪽 피연산자의 값을 더한 후, 그 결과 값을 왼쪽 피연산자에 대입함.
-=	왼쪽 피연산자의 값에서 오른쪽 피연산자의 값을 뺀 후, 그 결과 값을 왼쪽 피연산자에 대입함.
*=	왼쪽 피연산자의 값에 오른쪽 피연산자의 값을 곱한 후, 그 결과 값을 왼쪽 피연산자에 대입함.
/=	왼쪽 피연산자의 값을 오른쪽 피연산자의 값으로 나눈 후, 그 결과 값을 왼쪽 피연산자에 대입함.
%=	왼쪽 피연산자의 값을 오른쪽 피연산자의 값으로 나눈 후, 그 나머지를 왼쪽
피연산자에 대입함.

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var x = 10, y = 10, z = 10;
x = x - 5;
y -= 5; // y = y - 5 와 같은 표현임.
z =- 5; // z = -5 와 같은 표현임.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;increment-and-decrement-operator-증감-연산자&#34;&gt;increment and decrement operator ( 증감 연산자 )&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;++x	먼저 피연산자의 값을 1 증가시킨 후에 해당 연산을 진행함.
x++	먼저 해당 연산을 수행하고 나서, 피연산자의 값을 1 증가시킴.
--x	먼저 피연산자의 값을 1 감소시킨 후에 해당 연산을 진행함.
x--	먼저 해당 연산을 수행하고 나서, 피연산자의 값을 1 감소시킴.

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var x = 10, y = 10;
document.write((++x - 3) + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // x의 값을 우선 1 증가시킨 후에 3을 뺌.
document.write(x + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);         // 11
document.write((y++ - 3) + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // 먼저 y에서 3을 뺀 후에 y의 값을 1 증가시킴.
document.write(y);                  // 11
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;comparison-operator-비교-연산자&#34;&gt;comparison operator (비교 연산자)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;==	왼쪽 피연산자와 오른쪽 피연산자의 값이 같으면 참을 반환함.
===	왼쪽 피연산자와 오른쪽 피연산자의 값이 같고, 같은 타입이면 참을 반환함.
!=	왼쪽 피연산자와 오른쪽 피연산자의 값이 같지 않으면 참을 반환함.
!==	왼쪽 피연산자와 오른쪽 피연산자의 값이 같지 않거나, 타입이 다르면 참을 반환함.
&amp;gt;	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 크면 참을 반환함.
&amp;gt;=	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 크거나 같으면 참을 반환함.
&amp;lt;	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 작으면 참을 반환함.
&amp;lt;=	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 작거나 같으면 참을 반환함.

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
var x = 3, y = 5;
var a = &amp;quot;abc&amp;quot;, b = &amp;quot;bcd&amp;quot;;
document.write((x &amp;gt; y) + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);  // y의 값이 x의 값보다 크므로 false
document.write((a &amp;lt;= b) + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // 알파벳 순서상 &#39;a&#39;가 &#39;b&#39;보다 먼저 나오므로 &#39;a&#39;가 &#39;b&#39;보다 작음.
document.write(x &amp;lt; a);             // x의 값은 숫자이고 a의 값은 문자열이므로 비교할 수 없음.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;logical-operator-논리연산자&#34;&gt;Logical operator (논리연산자)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&amp;amp;&amp;amp; 는 and 

|| 는 or

! 는 Not
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;bitwise-operator-비트-연산자&#34;&gt;bitwise operator (비트 연산자)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;
&amp;amp;	대응되는 비트가 모두 1이면 1을 반환함. (비트 AND 연산)
|	대응되는 비트 중에서 하나라도 1이면 1을 반환함. (비트 OR 연산)
^	대응되는 비트가 서로 다르면 1을 반환함. (비트 XOR 연산)
~	비트를 1이면 0으로, 0이면 1로 반전시킴. (비트 NOT 연산)
&amp;lt;&amp;lt;	지정한 수만큼 비트를 전부 왼쪽으로 이동시킴. (left shift 연산)
&amp;gt;&amp;gt;	부호를 유지하면서 지정한 수만큼 비트를 전부 오른쪽으로 이동시킴. (right shift 연산)
&amp;gt;&amp;gt;&amp;gt;	지정한 수만큼 비트를 전부 오른쪽으로 이동시키며, 새로운 비트는 전부 0이 됨.

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;increment-decrement-operator-증감연산자&#34;&gt;increment/decrement operator (증감연산자)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;증감 연산자는 피연산자를 1씩 증가 혹은 감소시킬 때 사용하는 연산자이다.이 연산자는 피연산자가 단 하나뿐인 단항 연산자이다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a;
a++;
a = 0;
a++;
a--;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;comparison-operator-비교-연산자-1&#34;&gt;comparison operator (비교 연산자)&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;==	왼쪽 피연산자와 오른쪽 피연산자의 값이 같으면 참을 반환함.
===	왼쪽 피연산자와 오른쪽 피연산자의 값이 같고, 같은 타입이면 참을 반환함.
!=	왼쪽 피연산자와 오른쪽 피연산자의 값이 같지 않으면 참을 반환함.
!==	왼쪽 피연산자와 오른쪽 피연산자의 값이 같지 않거나, 타입이 다르면 참을 반환함.
&amp;gt;	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 크면 참을 반환함.
&amp;gt;=	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 크거나 같으면 참을 반환함.
&amp;lt;	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 작으면 참을 반환함.
&amp;lt;=	왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 작거나 같으면 참을 반환함.
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;typeof-연산자&#34;&gt;typeof 연산자&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;typeof 연산자는 피연산자의 타입을 반환한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;숫자, NaN	&amp;quot;number&amp;quot;
문자열	&amp;quot;string&amp;quot;
true, false	&amp;quot;boolean&amp;quot;
null	&amp;quot;object&amp;quot;
undefined	&amp;quot;undefined&amp;quot;
함수	&amp;quot;function&amp;quot;
함수가 아닌 객체	&amp;quot;object&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;typeof &amp;quot;문자열&amp;quot;   // string
typeof 10         // number
typeof NaN        // number
typeof false      // boolean
typeof undefined  // undefined
typeof new Date() // object
typeof null       // object
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;ternary-operator-삼항-연산자&#34;&gt;ternary operator (삼항 연산자)&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;삼항 연산자는 유일하게 피연산자를 세 개나 가지는 조건 연산자이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var x = 3, y = 5;
var result = (x &amp;gt; y) ? x : y   // x가 더 크면 x를, 그렇지 않으면 y를 반환함.
document.write(&amp;quot;둘 중에 더 큰 수는 &amp;quot; + result + &amp;quot;이다.&amp;quot;);

삼항 연산자는 짧은 if / else 문 대신 사용할 수 있으며, 코드를 간결하게 만들어 준다.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;delete-연산자&#34;&gt;delete 연산자&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;delete 연산자는 피연산자인 객체, 객체의 프로퍼티(property) 또는 배열의 요소(element) 등을 삭제해 준다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;피연산자가 성공적으로 삭제되었을 경우에는 참(true)을 반환하고, 삭제하지 못했을 경우에는 거짓(false)을 반환한다.
이 연산자는 피연산자가 단 하나뿐인 단항 연산자이며, 피연산자의 결합 방향은 오른쪽에서 왼쪽이다.&lt;/p&gt;

&lt;h5 id=&#34;쉼표-연산자&#34;&gt;쉼표 연산자&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;쉼표 연산자를 for 문에서 사용하면, 루프마다 여러 변수를 동시에 갱신할 수 있다.&lt;/p&gt;

&lt;p&gt;루프마다 i의 값은 1씩 증가하고, 동시에 j의 값은 1씩 감소함.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;for (var i = 0, j = 9; i &amp;lt;= j; i++, j--) {
    document.write(&amp;quot;i의 값은 &amp;quot; + i + &amp;quot;이고, j의 값은 &amp;quot; + j + &amp;quot;이다.&amp;lt;br&amp;gt;&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
var arr = [1, 2, 3];          // 배열 생성
delete arr[2];                // 배열의 원소 중 인덱스가 2인 요소를 삭제함.
document.write(arr + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); // [1, 2, ]
// 배열에 빈자리가 생긴 것으로 undefined 값으로 직접 설정된 것은 아님.
document.write(arr[2] + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);
// 배열의 요소를 삭제하는 것이지 배열의 길이까지 줄이는 것은 아님.
document.write(arr.length);

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;instanceof-연산자&#34;&gt;instanceof 연산자&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;instanceof 연산자는 피연산자인 객체가 특정 객체의 인스턴스인지 아닌지를 확인해 준다.
피연산자가 특정 객체의 인스턴스이면 참(true)을 반환하고, 특정 객체의 인스턴스가 아니면 거짓(false)을 반환한다.
이 연산자는 두 개의 피연산자를 가지는 이항 연산자이며, 피연산자들의 결합 방향은 왼쪽에서 오른쪽이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var str = new String(&amp;quot;이것은 문자열이다.&amp;quot;);
 
str instanceof Object;  // true
str instanceof String;  // true
str instanceof Array;   // false
str instanceof Number;  // false
str instanceof Boolean; // false

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;void-연산자&#34;&gt;void 연산자&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;void 연산자는 피연산자로 어떤 타입의 값이 오던지 상관없이 언제나 undefined 값만을 반환한다.
이 연산자는 피연산자가 단 하나뿐인 단항 연산자이며, 피연산자의 결합 방향은 오른쪽에서 왼쪽이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;javascript:void(0)&amp;quot;&amp;gt;이 링크는 동작하지 않는다.&amp;lt;/a&amp;gt;
 
&amp;lt;a href=&amp;quot;javascript:void(document.body.style.backgroundColor=&#39;yellow&#39;)&amp;quot;&amp;gt;
이 링크도 동작하지 않지만, HTML 문서의 배경색을 바꿔준다.
&amp;lt;/a&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;4-conditional&#34;&gt;&lt;strong&gt;4.Conditional&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;
if 문
if / else 문
if / else if / else 문
switch 문

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;if-문&#34;&gt;if 문&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;if (표현식) {
    표현식의 결과가 참일 때 실행하고자 하는 실행문;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var x = 10, y = 20;
if (x == y) {
document.write(&amp;quot;x와 y는 같다.&amp;quot;);
}
if (x &amp;lt; y) {
document.write(&amp;quot;x가 y보다 작다.&amp;quot;);
}
if (x &amp;gt; y) // 실행될 실행문이 한 줄뿐이라면 중괄호({})를 생략할 수 있음.
document.write(&amp;quot;x가 y보다 크다.&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;else-문&#34;&gt;else 문&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;
if (표현식) {
    표현식의 결과가 참일 때 실행하고자 하는 실행문;
} else {
    표현식의 결과가 거짓일 때 실행하고자 하는 실행문;
}
else 문을 사용하면 앞의 예제를 좀 더 직관적으로 표현할 수 있다.

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var x = 10, y = 20;
if (x == y) {
document.write(&amp;quot;x와 y는 같다.&amp;quot;);
} else {
if (x &amp;lt; y)
    document.write(&amp;quot;x가 y보다 작다.&amp;quot;);
else // 실행될 실행문이 한 줄뿐이라면 중괄호({})를 생략할 수 있음.
    document.write(&amp;quot;x가 y보다 크다.&amp;quot;);
}


&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;else-if-문&#34;&gt;else if 문&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;
if (표현식1) {
    표현식1의 결과가 참일 때 실행하고자 하는 실행문;
} else if (표현식2) {
    표현식2의 결과가 참일 때 실행하고자 하는 실행문;
} else {
    표현식1의 결과도 거짓이고, 표현식2의 결과도 거짓일 때 실행하고자 하는 실행문;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var x = 10, y = 20;
if (x == y) {
document.write(&amp;quot;x와 y는 같다.&amp;quot;);
} else if (x &amp;lt; y) {
document.write(&amp;quot;x가 y보다 작다.&amp;quot;);
} else { // x &amp;gt; y인 경우
document.write(&amp;quot;x가 y보다 크다.&amp;quot;);
}

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;switch-case&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;if 와 else if를 반복적으로 써야 하는 상황을 피하게 해 줍니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;var value;
switch(value) {
    case 값1:
    //value == 값1일 경우 실행할 코드
    break;
    case 값2:
    //value == 값2일 경우 실행할 코드
    break;
    //...
    default:
    //위쪽에 해당되지 않는 경우 실행할 코드
}

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;점수가 10점이면 A, 9점이면 B, 그 외에는 C를 출력하는 코드를 작성하세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;if로 구현
var score = prompt(&#39;점수를 입력하세요&#39;);
if (score === 10) {
    console.log(&#39;A&#39;);
} else if (score == 9) {
    console.log(&#39;B&#39;);
} else {
    console.log(&#39;C&#39;);
}

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
switch-case 로 구현
var score = prompt(&#39;점수를 입력하세요&#39;);
switch (score) {
    case 10:
    console.log(&#39;A);
    break;
    case 9:
    console.log(&#39;B&#39;);
    break;
    default:
    console.log(&#39;C&#39;);
}

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;5-loops&#34;&gt;&lt;strong&gt;5.Loops&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;
while 문
do / while 문
for 문
for / in 문
for / of 문

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;while&#34;&gt;while&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;while (표현식) {
    표현식의 결과가 참인 동안 반복적으로 실행하고자 하는 실행문;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;note&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;while 문 만들때는 변수를 미리 만들어 줘야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;var n ;
var n = 0;
var n = 1;

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex 1-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var n = 1;
while(n &amp;lt;= 100) {    
console.log(&amp;quot;Hi &amp;quot; + n);
n++;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex 1-2&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;while 문을 사용해서 1에서 100까지의 합을 구해 봅시다.
자주 사용하는 패턴
var i = 0; // 1 변수 초기화
while (i &amp;lt;= 100) { // 2 변수 검사
console.log(i); // 3 코드 다하고나서 
i++; //  4 하나씩 증가
}

그래서 for가 등장함
위의 while 코드와 완전히 똑같음
for (var i = 0; i &amp;lt;= 100; i++) {
console.log(i);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex gugudan with while&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;script&amp;gt;
       
    var strN = Number(prompt(&amp;quot;input which gugudan&amp;quot;));
    var i = 1;
    document.write(&amp;quot;gugudan&amp;quot; + strN + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);
    while (i &amp;lt; 10) {
        document.write(strN + &amp;quot; * &amp;quot; + i + &amp;quot; = &amp;quot; + strN * i + &amp;quot; &amp;lt;br&amp;gt; &amp;quot; );
        i++;
    }
   
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;for-문&#34;&gt;for 문&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;for (초기식; 표현식; 증감식) {
    표현식의 결과가 참인 동안 반복적으로 실행하고자 하는 실행문;
}
 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex 1-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
for (var i = 1; i &amp;lt; 10; i++) {
document.write(i + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);
}

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex 1-2 gugudan with for&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    
   var strN = Number(prompt(&amp;quot;input which dan?&amp;quot;));
   document.write(&amp;quot;gugudan&amp;quot; + strN + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);
   for (var i = 1; i &amp;lt; 10; i++) {
       document.write(strN + &amp;quot; * &amp;quot; + i + &amp;quot; = &amp;quot; + strN * i + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);
   }
    
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex 1-3 gugudan with button&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;P&amp;gt;사용자가 2 이상, 9 이하가 아닌 값을 입력하는 경우 &amp;quot;2이상, 9이하의 값만      입력할 수 있습니다.&amp;quot;라는 메시지를 출력한다.&amp;lt;/P&amp;gt;
&amp;lt;script&amp;gt;
        
    var strN;
    while (true){
        strN = Number(prompt(&amp;quot;input which dan from 2 dan to 9 dan&amp;quot;))
        if (strN &amp;lt; 2 || strN &amp;gt; 9){
            console.log(&amp;quot;this is not available&amp;quot;);
        } else {
            document.write(&amp;quot;gugudan&amp;quot; + strN + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;); 
            break;
        }
    }
    for (i = 1; i &amp;lt; 10; i ++){
        document.write(strN + &amp;quot; + &amp;quot; + i + &amp;quot; = &amp;quot; + strN + i + &amp;quot;&amp;lt;br&amp;gt;&amp;quot;);
    }
        
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;6-array&#34;&gt;&lt;strong&gt;6.Array&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;배열이란&#34;&gt;배열이란?&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;자바스크립트에서 배열(array)은 이름과 인덱스로 참조되는 정렬된 값의 집합으로 정의된다. 배열을 구성하는 각각의 값을 배열 요소(element)라고 하며, 배열에서의 위치를 가리키는 숫자를 인덱스(index)라고 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;특징&#34;&gt;특징&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;배열 요소의 타입이 고정되어 있지 않으므로, 같은 배열에 있는 배열 요소끼리의 타입이 서로 다를 수도 있다. 배열 요소의 인덱스가 연속적이지 않아도 되며, 따라서 특정 배열 요소가 비어 있을 수도 있다.자바스크립트에서 배열은 Array 객체로 다뤄진다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;배열-만들기-1&#34;&gt;배열 만들기 1&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;var scores = [50, 60, 70];
console.log(scores);
console.log(scores.length);

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;인덱스를-이용해서-배열의-원소-읽기&#34;&gt;인덱스를 이용해서 배열의 원소 읽기&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;scores[0];
scores[3];
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;배열에-값-쓰기&#34;&gt;배열에 값 쓰기&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;scores[0] = 100;
scores[9] = 50;

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;배열의-타입-알아보기&#34;&gt;배열의 타입 알아보기&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;typeof scores
typeof scores[0]

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;배열-만들기-2&#34;&gt;배열 만들기 2&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;var a = [];
a[0] = 2;
a[1] = 4;

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;배열의-길이-구하기&#34;&gt;배열의 길이 구하기&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;scores.length;

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;배열의-마지막-원소를-읽어-오려면&#34;&gt;배열의 마지막 원소를 읽어 오려면?&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;scores[scores.length - 1];
문자열과 배열
	•	문자열과 배열은 비슷한 성질을 많이 가지고 있습니다.
	•	문자열: Immutable
	•	배열: Mutable
	•	배열의 속성과 메소드를 문자열에도 테스트해보세요.

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;배열의-메소드들-1&#34;&gt;배열의 메소드들 1&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;push() 뒤어 붙이기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1,2,3,4,];
arr.push(1);

arr; // = &amp;gt; [1,2,3,4,1]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pop() 뒤에 있는거 빼기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1,2,3,4,];
arr.pop();

arr; // = &amp;gt; [1,2,3]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;unshift()  앞에 붙이기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1,2,3,4];

arr.unshift(1);

arr; // = &amp;gt; [1,1,2,3,4,];

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;shift()  앞에 있는거 빼기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1,2,3,4];

arr.shift();

arr; // = &amp;gt; [2,3,4,]

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;concat() 더하기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1,2,3,4,5];

arr.concat(6); 

&amp;gt;&amp;gt;arr 
[1,2,3,4,5,6]  
기존에 있는 것은 변하지 않는다.
변하게 하기위해서는 변수를 새로 만들기 !


var arr = [1,2,3,4,5];

arr.concat([6,7,8,9,10]);

&amp;gt;&amp;gt;arr
[1,2,3,4,5,6,7,8,9,10] 
여러게를 더할수 있다.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;join() 문자열로 바꾸기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1,2,3,4,5,6]

arr.join() ;

&amp;gt;&amp;gt;arr
[&amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;6&amp;quot;]
문자열로 바꿔준다. 

arr.join(&amp;quot;&amp;quot;);

&amp;gt;&amp;gt;arr
[&amp;quot;123456&amp;quot;];
문자열 다 붙인다.

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;indaxtOf() ()&amp;lt;&amp;lt;원소를 입력하면부터 앞에서 부터 찾아서 index번호 알려준다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;lastIndaxtOf() ()&amp;lt;&amp;lt;원소를 입력하면부터 뒤에서 부터 찾아서 index번호 알려준다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

var arr = [1,2,3,4,5];
arr.indexOf[1];

&amp;gt;&amp;gt;arr
2

arr.indexOf[100];
&amp;gt;&amp;gt;arr
-1
없는 경우 -1를 호출한다. 

EX) 
var arr = [1,2,3,4,5,6]
if (arr.indexOf(100) === -1 ) {
만약 100이라는 원소가 arr 에 없으면 
}

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;slice()&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1, 2, 3, 4, 5];
a.slice(0, 3);
&amp;gt;&amp;gt;a;
123
원소는 변하지 않는다

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;splice()&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var arr = [1, 2, 3, 4, 5];
a.splice(0, 3);
&amp;gt;&amp;gt;a;
123
원소 값이 변한다. 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;split()&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;문자열을 문자의 배열로 나누고 싶을 때 사용하는 메소드입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;var s = &amp;quot;hello, world this is jj&amp;quot;;
s.split(&amp;quot;&amp;quot;);


&amp;quot;h&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;l&amp;quot;, &amp;quot;l&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;,&amp;quot;, &amp;quot; &amp;quot;, &amp;quot;w&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;r&amp;quot;, &amp;quot;l&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot; &amp;quot;, &amp;quot;t&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;s&amp;quot;, &amp;quot; &amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;s&amp;quot;, &amp;quot; &amp;quot;, &amp;quot;j&amp;quot;, &amp;quot;j&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
var s = &amp;quot;hello, world this is jj&amp;quot;;
s.split(&amp;quot;,&amp;quot;);
&amp;quot;hello&amp;quot;, &amp;quot; world this is jj&amp;quot;
콤마가 생겼다. 콤마의 기준으로 갈라진다.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;var s = &amp;quot;hello world t-h-i-s-i-s-j-j&amp;quot;
s.split(&amp;quot;-&amp;quot;);

&amp;quot;hello  world t&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;s&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;s&amp;quot;, &amp;quot;j&amp;quot;, &amp;quot;j&amp;quot;
- 기준으로 갈라진다. 
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;7-function&#34;&gt;&lt;strong&gt;7.Function&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;함수-만들기&#34;&gt;함수 만들기&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;function convertHeight(feet, inches) {
  return (feet * 12 + inches) * 2.54
}
convertHeight(5, 10);
 //= &amp;gt;&amp;gt;177.8

(feet , inches) ==&amp;gt;&amp;gt; parameter ( 매개 변수) 
(5,10)  ==&amp;gt;&amp;gt; argument ( 전달인자	)

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;변수에-담아서-함수-사용하기&#34;&gt;변수에 담아서 함수 사용하기&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;var ret = function convertHeight(feet, inches) {
  return (feet * 12 + inches) * 2.54
}
ret(5, 10);
177.8

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;리턴값-없는-변수를-변수에-담으면-undefind-출력된다&#34;&gt;리턴값 없는 변수를 변수에 담으면 “undefind” 출력된다 .&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex 1-1 (console.log)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var foo = function () {
	console.log(“I’m a foo”);
}
&amp;gt;&amp;gt;undefined
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex 1-2 (return)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var foo = function () {
	return(“I’m a foo”);
}

&amp;gt;&amp;gt; I’m a foo
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;return-을-break-로-사용하기-return-으로-함수를-종료하는데-사용할-수-있다&#34;&gt;return 을 break 로 사용하기 (return 으로 함수를 종료하는데 사용할 수 있다.)&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;(Option) 2중 루프를 한 번에 빠져 나가기
- &lt;code&gt;break&lt;/code&gt; 명령은 한 번에 한 루프만 빠져나갑니다.
- 함수의 &lt;code&gt;return&lt;/code&gt; 을 이용하면 2중 루프를 한 번에 종료할 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;종료하기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var test1 = function (text) {
        if (text === &amp;quot;exit&amp;quot;) {
            return;
        }
        console.log(&amp;quot;실행&amp;quot;);
    }

test1(&amp;quot;exit&amp;quot;) // =&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;실행 하기&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var test1 = function (text) {
        if (text === &amp;quot;exit&amp;quot;) {
            return;
        }
        console.log(&amp;quot;실행&amp;quot;);
    }
test1(&amp;quot;oh&amp;quot;&amp;quot;); // = &amp;gt; 실행 

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;이중-loop-빠져-나가기&#34;&gt;이중 loop 빠져 나가기&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ex (하나만 빠져 나가기 )&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for (var i = 0; i &amp;lt; 10; i ++)  {
	for (var j = 0; j &amp;lt; 10; j++) {
		console.log(i , j );
		if (j === 3 ) {
		    break;

		}
	}
}


&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ex (이중 loop 빠져나간다 with function)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    var foo = function() {
        for (var i = 0; i &amp;lt; 10; i ++)  {
            for (var j = 0; j &amp;lt; 10; j++) {
                console.log(i , j );
                if (j === 3 ) {
                    return;

                }
            }
        }
     };
         
     foo();
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;배열을-이용한-while-문-for-문&#34;&gt;배열을 이용한 while 문 , for 문&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;// while loop
    
    
    function sum (nums) {
    var total = 0;
    var i = 0;
    while (i &amp;lt; nums.length) {
        total = total + nums[i];
        i++;
    }
    return total;
}
sum([2,3,5,1]);

&amp;gt;&amp;gt; 11

    
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;// for loop
  
  
  function sum (nums) {
  	var total = 0 ;
  	for (var i = 0 ; i &amp;lt; nums.length ; i = i + i ) {
  	total = total + nums[i]
  }
	return total;
}

sum([2,3,5,1,]);

&amp;gt;&amp;gt;11

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;8-objects&#34;&gt;&lt;strong&gt;8.Objects&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;making-objects&#34;&gt;making objects&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;1.
  var dog = {};

  dog.name = &amp;quot;jj&amp;quot;
  dog.color = &amp;quot;red&amp;quot;
  dog.kind = &amp;quot;똥깨&amp;quot;
  // &amp;gt;&amp;gt;&amp;gt; dog = {name = &amp;quot;jj&amp;quot;, color =&amp;quot;red&amp;quot; , kind = &amp;quot;똥깨 &amp;quot;}


2. 
 var dog = {
    name : &amp;quot;jj&amp;quot;,
    color : &amp;quot;red&amp;quot;,
    kind : &amp;quot;똥깨&amp;quot;
}

  // &amp;gt;&amp;gt;&amp;gt; dog = {name = &amp;quot;jj&amp;quot;, color =&amp;quot;red&amp;quot; , kind = &amp;quot;똥깨 &amp;quot;}

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;using-objcets-in-javascript&#34;&gt;using objcets in Javascript&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;var dog = {
    name = &amp;quot;jj&amp;quot;
    color = &amp;quot;red&amp;quot;
    
};

we have two systems .

1. 
dog.name;
dog[&amp;quot;name&amp;quot;];

결과갑 똑같다.
&amp;gt;&amp;gt;&amp;gt;jj

&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;changing-objects&#34;&gt;changing objects&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;1. it is changed

dog.name = &amp;quot;john&amp;quot;

2. it is added

dog.food = &amp;quot;Banana&amp;quot;


&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;메소드&#34;&gt;메소드&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;객체에 속한 함수&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
dog.eat = function(food) {
console.log(this.name + &amp;quot; ate delicious &amp;quot; + food +&amp;quot;...&amp;quot;);
};

p1.eat(&amp;quot;Beef&amp;quot;);

&amp;gt;&amp;gt; jj ate delicious Beef ...

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;this&#34;&gt;this&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;
메소드 안에서 사용시 함수를 소유한 객체를 가르킨다.

var p2 = {};
p2.name = &amp;quot;jj&amp;quot;;
p2.weight = 80;
p2.say = function(word) {
    console.log(this.name + &amp;quot; says, &amp;quot; + word);
};

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>IT terminology</title>
      <link>/tutorial/it-terminology/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/it-terminology/</guid>
      <description>&lt;p&gt;text&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example preprint / working paper</title>
      <link>/publication/preprint/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;code and math&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0900</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0900</pubDate>
      
      <guid>/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>/project/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0900</pubDate>
      
      <guid>/project/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Academic: the website builder for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0900</pubDate>
      
      <guid>/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em&gt;widgets&lt;/em&gt;, &lt;em&gt;themes&lt;/em&gt;, and &lt;em&gt;language packs&lt;/em&gt; included!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://sourcethemes.com/academic/#expo&#34; target=&#34;_blank&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;&lt;strong&gt;Setup Academic&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Ask a question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;Request a feature or report a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updating? View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support development of Academic:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34;&gt;Donate a coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patreon.com/cushen&#34; target=&#34;_blank&#34;&gt;Become a backer on Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34;&gt;Decorate your laptop or journal with an Academic sticker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34;&gt;Wear the T-shirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://sourcethemes.com/academic/docs/jupyter/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 15+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic comes with &lt;strong&gt;day (light) and night (dark) mode&lt;/strong&gt; built-in. Click the sun/moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt; to see it in action!&lt;/p&gt;

&lt;p&gt;Choose a stunning color and font theme for your site. Themes are fully customizable and include:&lt;/p&gt;









  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-1950s.png&#34; data-caption=&#34;1950s&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-1950s_huaf5482f8cea0c5a703a328640e3b7509_21614_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-apogee.png&#34; data-caption=&#34;Apogee&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-apogee_hu4b45d99db97150df01464c393bfd17d4_24119_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-coffee-playfair.png&#34; data-caption=&#34;Coffee theme with Playfair font&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-coffee-playfair_hu446a8f670cc5622adcc77b97ba95f6c5_22462_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-cupcake.png&#34; data-caption=&#34;Cupcake&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-cupcake_hueba8cfa8cfbc7543924fcbf387a99e92_23986_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-dark.png&#34; data-caption=&#34;Dark&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-dark_hu1e8601ecc47f58eada7743fdcd709d3d_21456_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-default.png&#34; data-caption=&#34;Default&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-default_huba6228b7bdf30e2f03f12ea91b2cba0d_21751_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-forest.png&#34; data-caption=&#34;Forest&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-forest_hu4f093a1c683134431456584193ea41ee_21797_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-ocean.png&#34; data-caption=&#34;Ocean&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-ocean_hu14831ccafc2219f30a7a096fa7617e01_21760_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;

&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34; target=&#34;_blank&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-scripts&#34; target=&#34;_blank&#34;&gt;Academic Scripts&lt;/a&gt;:&lt;/strong&gt; Scripts to help migrate content to new versions of Academic&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-web-browser&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;one-click install using your web browser (recommended)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-git&#34; target=&#34;_blank&#34;&gt;install on your computer using &lt;strong&gt;Git&lt;/strong&gt; with the Command Prompt/Terminal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-zip&#34; target=&#34;_blank&#34;&gt;install on your computer by downloading the &lt;strong&gt;ZIP files&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;install on your computer with &lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then &lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;personalize and deploy your new site&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;View the Update Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;updates&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0900</pubDate>
      
      <guid>/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;code and math&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>/publication/conference-paper/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>/publication/conference-paper/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Supplementary notes can be added here, including &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;code and math&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>JS Notes</title>
      <link>/tutorial/javascript_notes/</link>
      <pubDate>Thu, 01 Jan 1970 09:33:39 +0900</pubDate>
      
      <guid>/tutorial/javascript_notes/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;parseint-숫자로-바꾸는것&#34;&gt;parseInt() 숫자로 바꾸는것&lt;/h2&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;tostring-문자로-바꾸는것&#34;&gt;toString() 문자로 바꾸는것&lt;/h2&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;string-repeat-반복하는것&#34;&gt;String.repeat() 반복하는것&lt;/h2&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;sort-배열-정렬할때&#34;&gt;sort() : 배열 정렬할때&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;
var numbers = [20, 10, 9,8,7,6,5,4,3,2,1];
var x = function(a,b){
	return a-b;
}

console.log(numbers.sort(x));

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20]


순서반대 로 할려면
return a+b;

[20, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;추가 설명 from 생활코딩 사전 sort()&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function sortNumber(a,b){
    // 비교 대상인 a와 b가 인자로 전달된다.
    //alert(&#39;a :&#39;+a+&#39;, b:&#39;+b);
    // a에서 b를 뺀 결과가 음수면 a가 b보다 작고, 0이면 같다.
    // sort메소드는 return 값이 음수,양수,0인지에 따라서 순서를 정한다.
    return a-b;
}
var numbers = [20, 10, 9,8,7,6,5,4,3,2,1];
alert(numbers.sort(sortNumber)); // array, [1,2,3,4,5,6,7,8,9,10,20]

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;function&#34;&gt;function&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;함수를 변수, 매개변수 ,리턴값 으로 사욜할수 있다 이것을

first-class value 
first-class citizen
first-class object

라고 부른다. 

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;값으로써 쓰이는 함수 예제&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function cal(mode){
var funcs = {
    &#39;plus&#39; : function(left, right){return left + right},
    &#39;minus&#39; : function(left, right){return left - right}
}
return funcs[mode];
}
alert(cal(&#39;plus&#39;)(2,1));
alert(cal(&#39;minus&#39;)(2,1));  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;배열로서의 함수&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
var process = [
function(input){ return input + 10;},
function(input){ return input * input;},
function(input){ return input / 2;}
];
var input = 1;
for(var i = 0; i &amp;lt; process.length; i++){
input = process[i](input);
}
alert(input);

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;/tutorial/Javascript_Notes_files/Screen Shot 2019-07-17 at 4.10.02 PM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;콜백&#34;&gt;콜백&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;장점&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;원래의 내장메소드에 있는 기능을 콜백 으로 바꿔서 사용할수 있다.&lt;/p&gt;

&lt;p&gt;값으로 사용될 수 있는 특성을 이용하면 함수의 인자로 함수로 전달할 수 있다. 값으로 전달된 함수는 호출될 수 있기 때문에 이를 이용하면 함수의 동작을 완전히 바꿀 수 있다. 인자로 전달된 함수 sortNumber의 구현에 따라서 sort의 동작방법이 완전히 바뀌게 된다.&lt;/p&gt;

&lt;p&gt;ajax를 사용할때 제이 쿼리를 이용해서 콜백이 사용된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;function sortNumber(a,b){
    // 위의 예제와 비교해서 a와 b의 순서를 바꾸면 정렬순서가 반대가 된다.
    return b-a;
}
var numbers = [20, 10, 9,8,7,6,5,4,3,2,1];
alert(numbers.sort(sortNumber)); // array, [20,10,9,8,7,6,5,4,3,2,1]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/tutorial/Javascript_Notes_files/Screen Shot 2019-07-17 at 4.46.43 PM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JS algorithm</title>
      <link>/tutorial/javascript_side/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/javascript_side/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-aresamelength&#34;&gt;Conditional : areSameLength&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2개의 문자열이 주어졌을 때, areSameLength는 문자열들의 길이가 같으면 true를, 아니면 false를 반환해야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function areSameLength(string1, string2) {
	if (string1.length === string2.length) {
	  return true;
	} else {
return false;
}
}


areSameLength(&amp;quot;they&amp;quot;,&amp;quot;hello&amp;quot;);

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-ispasswordlongenough&#34;&gt;Conditional : isPasswordLongEnough&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;isPasswordLongEnough 함수는 문자열과 정수를 parameter로 입력받는 함수로, 여기서는 암호의 최소 요구 길이를 판단합니다. 문자열의 길이가 충분한지 여부를 반환해야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function isPasswordLongEnough(password, minimumLength) {
	// your code here
	if (password.length &amp;gt;minimumLength) {
	  return true;
	} else {
	  return false;
	}
	// start solution

	// end solution
}

isPasswordLongEnough(&#39;hello&#39;,5);

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-bouncer&#34;&gt;Conditional :  bouncer&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;문자열의 형태로 이름, 정수 형태로 나이를 입력받는 bouncer 함수는, 주어진 나이에 따라 환영 메시지 혹은 거절 메시지를 리턴합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function bouncer(name, age) {
// This code is not right...I couldn&#39;t find it why 
if (age &amp;gt;= 21) {
return &#39;Welcome,&#39; +name+ &#39;!&#39;;
} else{
return &#39;Go home,&#39;  +name+ &#39;.&#39;;
}
}  


function bouncer(name, age) {
// this code is right
if (age &amp;gt;= 21){
return &#39;Welcome, &#39; +name+ &#39;!&#39;
} else {
return &#39;Go home, &#39; +name+ &#39;.&#39;
}
}

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-getlargerstring&#34;&gt;Conditional :  getLargerString&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;두 문자열이 주어졌을 때, getLargerString 함수는 더 긴 문자열을 반환해야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
function getLargerString(string1, string2) {
	// your code here
	// start solution

	// end solution
	if (string1.length &amp;gt; string2.length) {
	  return string1;
	} else if (string1.length === string2.length){
	  return string1;
	} else {
	  return string2; 
	}
}

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-1-5-iseven&#34;&gt;Conditional :  1-5 isEven&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;isEven 함수는 정수 하나를 입력받아 그 정수가 짝수인지 아닌지를 반환해야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function isEven(num) {
	// your code here
	// start solution

	// end solution
	if (num % 2 === 0 ){
	  return true;
	} else {
	  return false;
	}
}

isEven(22)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-ispositive&#34;&gt;Conditional :  isPositive&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;정수 하나가 주어졌을 때, &lt;code&gt;isPositive&lt;/code&gt; 함수는 그 정수가 양수인지 아닌지를 반환해야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function isPositive(num) {
	// your code here
	// start solution
  
	// end solution
	if (num &amp;gt;= 0 ){
	  return true;
	} else {
	  return false;
	}
};

isPositive(42);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-bounceblacklist&#34;&gt;Conditional :  bounceBlacklist&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;이전에 작성했던 &lt;code&gt;bounce&lt;/code&gt; 함수에서 새로운 요구사항이 추가되었습니다. 특정 사람을 거절하는 기능입니다. &amp;ldquo;Joe&amp;rdquo;라는 사람은 우리의 블랙 리스트로, 이 사람은 나이에 관계없이 거절하기로 결정하였습니다. 기존의 &lt;code&gt;bounce&lt;/code&gt;함수를 수정하여, &amp;ldquo;Joe&amp;rdquo;라는 사람은 무조건 거절 메시지를 보낼 수 있도록 작성하십시오.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;??? it&#39;s not sovled out??

function bouncerBlackList(name, age) {
if (name === &#39;Joe&#39;) {
return &#39;Go home,&#39; + name + &#39;!&#39;;
}
if ( age &amp;gt; 20 ) {
	return &#39;Welcome, &#39; + name + &#39;!&#39;;
} else {
	return &#39;Go home, &#39; + name + &#39;.&#39;;
}  
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-scoretograde&#34;&gt;Conditional :  scoreToGrade&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;숫자 하나를 매개변수로 받아서, 그 점수에 상응하는 성적 등급을 나타내는 문자열을 반환하는 함수 &lt;code&gt;scoreToGrade&lt;/code&gt;를 작성하세요.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function scoreToGrade(score) {
  if (score &amp;lt; 60){
    return &#39;F&#39;;
  } else if (score &amp;lt; 70) {
    return &#39;D&#39;;
  } else if (score &amp;lt; 80) {
    return &#39;C&#39;;
  } else if (score &amp;lt; 90) {
    return &#39;B&#39;;
  } else if (score &amp;lt; 100) {
    return &#39;A&#39;;
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-convertscoretogradewithplusandminus&#34;&gt;Conditional :  convertScoreToGradeWithPlusAndMinus&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;// Write a function called &amp;quot;convertScoreToGradeWithPlusAndMinus&amp;quot;.

// Given a score, &amp;quot;convertScoreToGradeWithPlusAndMinus&amp;quot; returns a string representing the letter grade corresponding to the given score.

// Notes:
// * (100 - 90) --&amp;gt; &#39;A&#39;
// * (89  - 80) --&amp;gt; &#39;B&#39;
// * (79  - 70) --&amp;gt; &#39;C&#39;
// * (69  - 60) --&amp;gt; &#39;D&#39;
// * (59  -  0) --&amp;gt; &#39;F&#39;
// * If the given score is greater than 100 or less than 0, it should return &#39;INVALID SCORE&#39;.
// * If the score is between the 0 and 2 (inclusive) of a given range, return the letter with a &#39;-&#39;
// * If the score is between the 8 and 9 (inclusive) of a given range, return the letter with a &#39;+&#39;
// * There are is no F+ and there is no F-.

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;function convertScoreToGradeWithPlusAndMinus(score) {
  var output = &#39;&#39;;
  var lastNum = score.toString().slice(-1);
  if ((score &amp;gt; 100) &amp;amp;&amp;amp; (score &amp;lt; 50)) {
    return &#39;INVALID SCORE&#39;;
  } else if(score === 100) {
    return &#39;A+&#39;;
  } else if(score &amp;gt;= 90 &amp;amp;&amp;amp; score &amp;lt;= 99) {
      output = output + &#39;A&#39;;
  } else if(score &amp;gt;= 80 &amp;amp;&amp;amp; score &amp;lt;= 89) {
      output = output + &#39;B&#39;;
  } else if(score &amp;gt;= 70 &amp;amp;&amp;amp; score &amp;lt;= 79) {
      output = output + &#39;C&#39;;
  } else if(score &amp;gt;= 60 &amp;amp;&amp;amp; score &amp;lt;= 69) {
      output = output + &#39;D&#39;;
  } else if(score &amp;lt; 60) {
      output = output + &#39;F&#39;;
  }
    if(parseInt(lastNum) &amp;lt;= 2 &amp;amp;&amp;amp; parseInt(lastNum) &amp;gt;= 0) { 
    output = output + &#39;-&#39;;
  } else if(parseInt(lastNum) &amp;gt;= 8 &amp;amp;&amp;amp; parseInt(lastNum) &amp;lt;= 9) {
    output = output + &#39;+&#39;;
  }
  return output;
}

convertScoreToGradeWithPlusAndMinus(72)


&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;conditional-scoretograde-1&#34;&gt;Conditional :  scoreToGrade&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;scoreToGrade` 함수를 수정하여 등급 글자 뒤에 +나 -를 붙이는 작업을 할 때, 반복되는 코드가 상당히 많았었다는 것을 눈치채셨나요? 반복되는 것이 많다는 것은, 훨씬 더 나은 방법이 있다는 분명한 신호입니다.

`letter`와 `score`라는 두 전달인자를 받아서 다음과 같이 작동하는 도우미 함수 `letterGrade`를 작성하세요.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;function letterGrade(letter, score) {
  var lastNum = score.toString().slice(-1);
  if (score === 100) {
    return &#39;A+&#39;;
  } else if (parseInt(lastNum) &amp;lt;= 2 &amp;amp;&amp;amp; parseInt(lastNum) &amp;gt;= 0 ){
    return letter + &#39;-&#39;;
  } else if (parseInt(lastNum) &amp;gt;= 8 &amp;amp;&amp;amp; parseInt(lastNum)&amp;lt;= 9) {
    return letter + &#39;+&#39;;
  }else if (parseInt(lastNum) &amp;gt; 2  &amp;amp;&amp;amp; parseInt(lastNum)&amp;lt; 8 ) {
    return letter;
  }
}

letterGrade(&amp;quot;A&amp;quot;,50);

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;loop-countchars&#34;&gt;Loop:  countChars&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;문자열 하나와 글자 하나를 매개변수로 받는 함수 &lt;code&gt;countChars&lt;/code&gt;를 작성하세요. 이 함수는 주어진 문자열에서 주어진 글자가 몇 개나 들어가 있는지를 세어서 숫자로 반환해야 합니다. 문자열의 첫번째 글자를 알아내려면, 다음과 같은 문법을 사용하면 됩니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
function countChars(string, character) {
var result = string;
var count = 0;
var i = 0;
while ( i &amp;lt; string.length) {
if (result[i] === character) {
  count = count + 1 ;
} 
result.slice(0,1);
i++
}
return count;
}

countChars(&amp;quot;hello&amp;quot;,&amp;quot;h&amp;quot;);

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;loop-repeatstring&#34;&gt;Loop:  repeatString&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;문자열을 n번 반복해보도록 합시다. 반복할 문자열 &lt;code&gt;string&lt;/code&gt;과 그 문자열을 몇 번 반복하는지를 나타내는 숫자 &lt;code&gt;n&lt;/code&gt;을 매개변수로 받는 함수 &lt;code&gt;repeatString&lt;/code&gt;을 작성하세요.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function repeatString(string, num) {
return string.repeat(num);
}

repeatString(&amp;quot;code&amp;quot;,3);

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
